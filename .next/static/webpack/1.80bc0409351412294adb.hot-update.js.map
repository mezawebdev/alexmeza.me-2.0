{"version":3,"file":"static/webpack/1.80bc0409351412294adb.hot-update.js","sources":["webpack:///./components/World/World.js"],"sourcesContent":["import React from \"react\";\nimport Config from \"./Config\";\nimport Ground from \"./Ground\";\nimport Mountains from \"./Mountains\";\nimport Camera from \"./Camera\";\nimport Light from \"./Light\";\nimport Utils from \"./Utils\";\nimport Effects from \"./Effects\";\nimport Stars from \"./Stars\";\nimport Backgrounds from \"./Backgrounds\";\n\nclass World extends React.Component {\n    constructor(props) {\n        super(props);\n        this.canvas = React.createRef();\n    }\n\n    resize() {\n        this.canvas.current.width = window.innerWidth;\n        this.canvas.current.height = window.innerHeight;\n        this.engine.resize();\n    }\n\n    startEngine() {\n        this.engine = new BABYLON.Engine(this.canvas.current, true);\n        this.scene = new BABYLON.Scene(this.engine);\n        this.camera = new Camera(this.canvas.current, this.scene);\n    }\n\n    renderWorld() {\n        this.scene.clearColor = new BABYLON.Color4(0, 0, 0, 1);\n        this.light = new Light(this.scene);\n        this.ground = new Ground(this.scene);\n        this.mountains = new Mountains(this.scene);\n\n        if (Config.stars.show) {\n            this.stars = new Stars(this.scene);\n        }\n\n        this.effects = new Effects(this.scene);\n    }\n\n    componentDidMount() {\n        this.startEngine();\n\n        this.renderWorld();\n\n        if (Config.debug.axis) {\n            Utils.showWorldAxis(Config.debug.axisSize, this.scene);\n        }\n\n        if (Config.stars.show) {\n            this.stars = new Stars();\n        }\n\n        this.resize();\n\n        window.addEventListener(\"resize\", () => { \n            this.resize();\n        });\n\n        this.engine.runRenderLoop(() => { \n            this.scene.render();\n            // this.camera.defaultCamera.position.x += 0.005;\n            // this.camera.defaultCamera.position.z += 0.005;\n        });\n    }\n\n    render() {\n        return (\n            <div>\n                {/* <Stars world={ this } /> */}\n                <Backgrounds />\n                <canvas \n                    id=\"canvas\"\n                    style={ Config.canvas.style }\n                    ref={ this.canvas }>\n                </canvas>\n            </div>\n        );\n    }\n}\n\nexport default World;"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;AAFA;AAGA;AACA;;;AACA;AACA;AACA;AACA;AACA;;;AAEA;AACA;AACA;AACA;AACA;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAAA;AACA;;;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;;;;AArEA;AACA;AAuEA;;;;A","sourceRoot":""}