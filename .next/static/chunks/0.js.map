{"version":3,"file":"static/chunks/0.js","sources":["webpack:///./components/World/Backgrounds.js","webpack:///./components/World/Camera.js","webpack:///./components/World/Config.js","webpack:///./components/World/Consciousness.js","webpack:///./components/World/Effects.js","webpack:///./components/World/Grid.js","webpack:///./components/World/Light.js","webpack:///./components/World/Mountains.js","webpack:///./components/World/Plane.js","webpack:///./components/World/Sky.js","webpack:///./components/World/Stars.js","webpack:///./components/World/Sun.js","webpack:///./components/World/Title.js","webpack:///./components/World/Utils.js","webpack:///./components/World/World.js","webpack:///./node_modules/@babel/runtime-corejs2/core-js/parse-float.js","webpack:///./node_modules/@babel/runtime-corejs2/core-js/parse-int.js","webpack:///./node_modules/core-js/library/fn/parse-float.js","webpack:///./node_modules/core-js/library/fn/parse-int.js","webpack:///./node_modules/core-js/library/modules/_parse-float.js","webpack:///./node_modules/core-js/library/modules/_parse-int.js","webpack:///./node_modules/core-js/library/modules/_string-trim.js","webpack:///./node_modules/core-js/library/modules/_string-ws.js","webpack:///./node_modules/core-js/library/modules/es6.parse-float.js","webpack:///./node_modules/core-js/library/modules/es6.parse-int.js","webpack:///./public/js/vendor/granim.min.js"],"sourcesContent":["import React from \"react\";\nimport Config from \"./Config\";\nimport \"../../public/js/vendor/granim.min.js\";\nimport \"../../assets/scss/backgrounds.scss\";\n\nclass Backgrounds extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    componentDidMount() {\n        this.colorBackground = new Granim({\n            element: '#bottom-color-background',\n            direction: 'top-bottom',\n            isPausedWhenNotInView: true,\n            states : {\n                \"default-state\": {\n                    gradients: Config.backgrounds.bottomColorBackground.gradients\n                }\n            }\n        });\n    }\n\n    render() {\n        return (\n            <div \n                style={ Config.backgrounds.style } \n                id=\"backgrounds\">\n                <div \n                    style={ Config.backgrounds.centerGradientBackground.style } \n                    id=\"gradient-center-background\">    \n                </div>\n                <canvas \n                    style={ Config.backgrounds.bottomColorBackground.style } \n                    id=\"bottom-color-background\">    \n                </canvas>\n            </div>\n        );\n    }\n}\n\nexport default Backgrounds;","// import * as BABYLON from \"babylonjs\";\nimport Config from \"./Config\";\nimport Utils from \"./Utils\";\n\nclass Camera {\n    constructor(canvas, scene) {\n        this.scene = scene;\n        this.setCamera();\n        this.animate();\n        this.camera.minZ = 0;\n\n        // this.camera.attachControl(canvas, true);\n        \n        if (Config.debug.cameraControls) {\n            this.camera.attachControl(canvas, true);\n        }\n    }\n\n    setCamera() {\n        switch (Config.camera.type) {\n            case \"free\":\n                this.camera = new BABYLON.UniversalCamera(\n                    \"UniversalCamera\", \n                    new BABYLON.Vector3(Config.camera.initialPosition.x, Config.camera.initialPosition.y, Config.camera.initialPosition.z), \n                    this.scene\n                );\n                this.createTarget();\n                this.camera.setTarget(new BABYLON.Vector3(Config.camera.initialTarget.x, Config.camera.initialTarget.y, Config.camera.initialTarget.z));\n            break;\n            case \"arc\":\n                this.camera = new BABYLON.ArcRotateCamera(\n                    \"Camera\", \n                    Config.camera.initialTarget.x, \n                    Config.camera.initialTarget.y, \n                    Config.camera.initialTarget.z, \n                    new BABYLON.Vector3(Config.camera.initialPosition.x, Config.camera.initialPosition.y, Config.camera.initialPosition.z), \n                    this.scene\n                );\n\n                this.createTarget();\n            break;\n            case \"follow\":\n                this.camera = new BABYLON.FollowCamera(\n                    \"Camera\", \n                    new BABYLON.Vector3(Config.camera.initialPosition.x, Config.camera.initialPosition.y, Config.camera.initialPosition.z), \n                    this.scene\n                );\n\n                this.createTarget();\n            break;\n        }\n    }\n\n    createTarget() {\n        this.targetSphere = new BABYLON.MeshBuilder.CreateSphere(\"target\", {\n            diameter: Config.camera.initialTarget.diameter\n        }, this.scene);\n\n        this.targetSphere.material = new BABYLON.StandardMaterial(\"transparent-material\", this.scene);\n\n        this.targetSphere.material.alpha = 0;\n\n        this.targetSphere.position = new BABYLON.Vector3(Config.camera.initialTarget.x, Config.camera.initialTarget.y, Config.camera.initialTarget.z);\n\n        if (Config.camera.type === \"arc\") {\n            this.camera.lockedTarget = this.targetSphere;\n        }\n\n        this.camera.position = new BABYLON.Vector3(Config.camera.initialPosition.x, Config.camera.initialPosition.y, Config.camera.initialPosition.z);\n    }\n\n    animate() {\n        // this.scene.onPointerObservable.add(pointerInfo => {\n        //     switch (pointerInfo.type) {\n        //         case BABYLON.PointerEventTypes.POINTERDOWN:\n        //             console.log(\"POINTER DOWN\");\n        //             // this.targetSphere.position.y += -0.01;\n        //             // this.camera.position.y += -0.1;\n        //             // console.log(this.camera.position.y);\n        //             break;\n        //         case BABYLON.PointerEventTypes.POINTERUP:\n        //             console.log(\"POINTER UP\");\n        //             // this.targetSphere.position.y += 0.01;\n        //             // this.camera.position.y += 0.1;\n        //             // console.log(this.camera.position.y);\n        //             break;\n        //         case BABYLON.PointerEventTypes.POINTERMOVE:\n        //             // this.camera.position.y += 0.1;\n        //             this.targetSphere.position.y += 0.01;\n        //             console.log(pointerInfo);\n        //             console.log(\"POINTER MOVE\");\n        //             // this.camera.position.y += -0.001;\n        //             break;\n        //         case BABYLON.PointerEventTypes.POINTERWHEEL:\n        //             console.log(\"POINTER WHEEL\");\n        //             // this.targetSphere.position.y += -0.01;\n        //             break;\n        //         case BABYLON.PointerEventTypes.POINTERPICK:\n        //             console.log(\"POINTER PICK\");\n        //             break;\n        //         case BABYLON.PointerEventTypes.POINTERTAP:\n        //             console.log(\"POINTER TAP\");\n        //             break;\n        //         case BABYLON.PointerEventTypes.POINTERDOUBLETAP:\n        //             console.log(\"POINTER DOUBLE-TAP\");\n        //             break;\n        //     }\n        // });\n    }\n}\n\nexport default Camera;","export default {\n    responsive: {\n        sizes: {\n            origin: 0,\n            small: 640,\n            medium: 767,\n            large: 1200,\n            xlarge: 1400\n        }\n    },\n    debug: {\n        axis: true,\n        axisSize: 1.5,\n        cameraControls: true\n    },\n    palette: [\n        \"#2DE2E6\",\n        \"#F706CF\",\n        \"#791E94\",\n        \"#FF4365\",\n        \"#F9C80E\",\n        \"#FF6C11\"\n    ],\n    canvas: {\n        style: {\n            background: \"radial-gradient(circle, rgba(50,37,107,1) 0%, rgba(14,8,32,1) 100%)\",\n            zIndex: \"5\",\n            position: \"fixed\"\n        }\n    },\n    lights: {\n        enabled: true,\n        all: []\n    },\n    consciousness: {\n        enabled: true,\n        walkSpeed: 0.003\n    },\n    backgrounds: {\n        style: {\n            zIndex: \"6\"\n        },\n        centerGradientBackground: {\n            style: {\n                zIndex: \"3\",\n                background: \"rgba(0, 0, 0, 0)\"\n            }\n        },\n        bottomColorBackground: {\n            gradients: [\n                ['rgba(0, 0, 0, 0)', 'rgb(45, 226, 230)'],\n                ['rgba(0, 0, 0, 0)', 'rgb(101, 13, 137)'],\n                ['rgba(0, 0, 0, 0)', 'rgb(255, 108, 17)'],\n                ['rgba(0, 0, 0, 0)', 'rgb(246, 1, 157)'],\n                ['rgba(0, 0, 0, 0)', 'rgb(121, 30, 148)']\n            ],\n            style: {\n                zIndex: \"2\",\n                opacity: \"0.2\"\n            }\n        }\n    },\n    title: {\n        enabled: false,\n        text: \"ALEX MEZA\",\n        settings: {\n            default: {\n                scale: 0.027,\n                z: 1.56,\n                x: 1,\n                y: 4.4\n            },\n            medium: {\n\n            }\n        }\n    },\n    stars: {\n        enabled: true,\n        animated: true,\n        amount: 300,\n        minSize: 0.0025,\n        maxSize: 0.007, \n        minPos: -10,\n        maxPos: 50,\n        fadeInSpeed: 0.05,\n        rotationSpeed: 0.01\n    },\n    camera: {\n        type: \"free\",\n        maxZ: 0.001,\n        initialPosition: {\n            x: -0.11,\n            y: 0.05,\n            z: -0.11\n        },\n        initialTarget: {\n            x: 0.1,\n            y: 0.075,\n            z: 0.1,\n            diameter: 0.01\n        },\n        walk: true,\n        walkSpeed: 0.005\n    },\n    effects: {\n        enabled: true,\n        glow: {\n            intensity: 0.75\n        },\n        fog: {\n            enabled: false,\n            density: 0.01,\n            color: new BABYLON.Color3.FromHexString(\"#000000\")\n        },\n        lens: {\n            enabled: true\n        }\n    },\n    grid: {\n        enabled: true,\n        animated: true,\n        verticalLinesAmount: 100,\n        horizontalLinesAmount: 60,\n        color: new BABYLON.Color3.FromHexString(\"#F706CF\"),\n        frequency: 0.05,\n        diameter: 0.001,\n        height: 10,\n        speed: 0.003\n    },\n    mountains: {\n        enabled: true,\n        meshes: [\n            {\n                heightMap: \"images/height_map5.png\",\n                width: 15,\n                height: 15,\n                textureHeight: 3,\n                subdivisions: 20,\n                rotation: 0.785,\n                x: 3,\n                z: 3,\n                y: -0.1,\n                grid: {\n                    mainColor: new BABYLON.Color3.FromHexString(\"#000000\"),\n                    lineColor: new BABYLON.Color3.FromHexString(\"#2de2e6\"),\n                    gridRatio: 0.2,\n                    majorUnitFrequency: 1,\n                    opacity: 1\n                }\n            }\n        ]\n    },\n    sky: {\n        enabled: true,\n        colors: {\n            top: {\n                r: 8,\n                g: 13,\n                b: 46\n            },\n            bottom: {\n                r: 247,\n                g: 6,\n                b: 207\n            }\n        }\n    },\n    sun: {\n        enabled: true,\n        diameter: 8,\n        position: {\n            x: 17,\n            y: -0.5,\n            z: 17\n        },\n        color: \"#FF6C11\"\n    },\n    planes: [\n        {\n            enabled: true,\n            followCamera: true,\n            width: 15,\n            height: 15,\n            y: -0.01,\n            rotation: 0.7854,\n            material: {\n                color: new BABYLON.Color3.FromHexString(\"#000000\")\n            }\n        }\n    ],\n    buildings: {\n        enabled: true,\n        meshes: [\n            {\n                shape: \"rectangle\",\n                width: 0.5,\n                height: 0.5\n            }\n        ]\n    }\n}","import Config from \"./Config\";\n\nclass Consciousness {\n    constructor(world) {\n        this.world = world;\n    }\n\n    update() {\n        if (Config.grid.animated) {\n            this.world.grid.animate();\n        }\n\n        if (Config.stars.animated) {\n            this.world.stars.animate();\n        }\n    }\n}\n\nexport default Consciousness;","import Config from \"./Config\";\n// import * as BABYLON from 'babylonjs';\n\nclass Effects {\n    constructor(world) {\n        this.world = world;\n        this.createGlow();\n        // this.extraEffects();\n\n        if (Config.effects.fog.enabled) {\n            this.createFog();\n        }\n\n        if (Config.effects.lens.enabled) {\n            this.enableLens();\n        }\n    }\n\n    createGlow() {\n        this.glow = new BABYLON.GlowLayer(\"glow\", this.world.scene);\n\n        this.glow.intensity = Config.effects.glow.intensity;\n    }\n\n    createFog() {\n        this.world.scene.fogMode = BABYLON.Scene.FOGMODE_EXP;\n        this.world.scene.fogDensity = Config.effects.fog.density;\n        this.world.scene.fogColor = Config.effects.fog.color;\n    }\n\n    enableLens() {\n        // this.lensEffect = new BABYLON.LensRenderingPipeline('lens', {\n        //     edge_blur: 1.0,\n        //     chromatic_aberration: 1.0,\n        //     distortion: 1.0,\n        //     dof_focus_distance: 50,\n        //     dof_aperture: 6.0,\t\t\t// set this very high for tilt-shift effect\n        //     grain_amount: 1.0,\n        //     dof_pentagon: true,\n        //     dof_gain: 1.0,\n        //     dof_threshold: 1.0,\n        //     dof_darken: 0.25\n        // }, this.world.scene, 1.0, this.world.camera);\n\n        // console.log(BABYLON.FxaaPostProcess);\n\n        // this.world.camera.getScene = () => { return this.world.scene; };\n\n        // var postProcess = new BABYLON.BlurPostProcess(\"Horizontal blur\", new BABYLON.Vector2(2, 5), 32, 0.25);\n        // var postProcess = new BABYLON.FxaaPostProcess(\"fxaa\", 1.0, null, null, this.world.engine);\n        // this.world.camera.attachPostProcess(postProcess);\n\n\n        // this.postProcess = new BABYLON.FxaaPostProcess(\"fxaa\", 1.0, null, null, this.world.engine);\n    }\n\n    extraEffects() {\n        this.glowBar = new BABYLON.MeshBuilder.CreateBox(\"glowBar\", {\n            width: 7,\n            height: 0.5,\n            depth: 0.1\n        }, this.world.scene);\n\n        this.glowBar.material = new BABYLON.StandardMaterial(\"glow-material\", this.scene);\n\n        this.glowBar.material.emissiveColor = new BABYLON.Color3.FromHexString(Config.palette[0]);\n\n        this.glowBar.rotation.y = Math.PI / 4;\n        this.glowBar.position.x = 8.25;\n        this.glowBar.position.z = 8.25;\n        this.glowBar.position.y = -0.275;\n\n        // var hl = new BABYLON.HighlightLayer(\"hl1\", this.world.scene, true);\n        // hl.addMesh(this.glowBar, new BABYLON.Color3.FromHexString(Config.palette[0]));\n    }\n}\n\nexport default Effects;","import Config from \"./Config\";\n\nclass Grid {\n    constructor(scene) {\n        this.scene = scene;\n        this.verticalLines = [];\n        this.horizontalLines = [];\n        this.horizontalLineRotation = 1.57;\n        this.verticalLineRotation = 1.57;\n        this.horizontalLinesInitialMax = Config.grid.horizontalLinesAmount;\n        this.createGrid();\n    }\n\n    createGrid() {\n        // Horizontal Lines\n        for (let i = 0; i < Config.grid.horizontalLinesAmount; i++) {\n            this.newHorizontalLine(new BABYLON.Vector3(i * Config.grid.frequency, 0, i * Config.grid.frequency));\n        }\n\n        this.horizontalLines.forEach(line => {\n            line.uniqueKey = `line-${ Math.round(Math.random() * 10000000) }`;\n        });\n\n        // Vertical Lines\n        this.newVerticalLine(new BABYLON.Vector3(0, 0, 0));\n\n        for (let i = 0; i < Config.grid.verticalLinesAmount / 2; i++) {\n            if (i > 0) {\n                this.newVerticalLine(new BABYLON.Vector3(i * Config.grid.frequency, 0, 0));\n            }\n        }\n\n        for (let i = 0; i < Config.grid.verticalLinesAmount / 2; i++) {\n            if (i > 0) {\n                this.newVerticalLine(new BABYLON.Vector3(0, 0, i * Config.grid.frequency));\n            }\n        }\n    }\n\n    newHorizontalLine(position) {\n        this.horizontalLines.push(\n            new BABYLON.MeshBuilder.CreateCylinder(\"grid-line\", {\n                diameter: Config.grid.diameter,\n                height: Config.grid.height\n            }, this.scene)\n        );\n        this.horizontalLines.last().position = position;\n        this.horizontalLines.last().rotate(BABYLON.Axis.X, this.horizontalLineRotation, BABYLON.Space.WORLD);\n        this.horizontalLines.last().rotate(BABYLON.Axis.Y, -this.horizontalLineRotation / 2, BABYLON.Space.WORLD);\n        this.horizontalLines.last().material = new BABYLON.StandardMaterial(\"material\", this.scene);\n        this.horizontalLines.last().material.emissiveColor = Config.grid.color;\n    }\n\n    newVerticalLine(position) {\n        this.verticalLines.push(\n            new BABYLON.MeshBuilder.CreateCylinder(\"grid-line\", {\n                diameter: Config.grid.diameter,\n                height: 10\n            }, this.scene)\n        );\n        this.verticalLines.last().rotate(BABYLON.Axis.X, this.verticalLineRotation, BABYLON.Space.WORLD);\n        this.verticalLines.last().rotate(BABYLON.Axis.Y, this.verticalLineRotation / 2, BABYLON.Space.WORLD);\n        this.verticalLines.last().position = position;\n        this.verticalLines.last().material = new BABYLON.StandardMaterial(\"material\", this.scene);\n        this.verticalLines.last().material.emissiveColor = Config.grid.color;\n    }\n\n    animate() {\n        // Grid\n        var i = 0,\n            sceneOriginOffset = -0.1;\n\n            this.horizontalLines.forEach(line => {\n                line.position.x += -Config.consciousness.walkSpeed;\n                line.position.z += -Config.consciousness.walkSpeed;\n\n                if (line.position.x <= sceneOriginOffset + Config.camera.initialTarget.diameter && line.position.z <= sceneOriginOffset + Config.camera.initialTarget.diameter && line.position.x >= sceneOriginOffset - Config.camera.initialTarget.diameter && line.position.z >= sceneOriginOffset - Config.camera.initialTarget.diameter) {\n                    line.material.emissiveColor = new BABYLON.Color3(1, 1, 1);\n                    line.dispose();\n                    this.horizontalLines.splice(i, 1);\n                    this.newHorizontalLine(new BABYLON.Vector3(this.horizontalLinesInitialMax * Config.grid.frequency, 0, this.horizontalLinesInitialMax * Config.grid.frequency));\n                }\n\n                i++;\n            });\n    }\n}\n\nexport default Grid;","class Light {\n    constructor(scene) {\n        this.lights = [\n            // new BABYLON.HemisphericLight(\"light1\", new BABYLON.Vector3(1, 1, 1), scene)\n        ]\n\n    }\n}\n\nexport default Light;","import Config from \"./Config\";\n\nclass Mountains {\n    constructor(scene) {\n        this.scene = scene;\n        this.mountains = [];\n        this.createMountains();\n        this.setMaterials();\n    }\n\n    createMountains() {\n        Config.mountains.meshes.forEach(mountain => {\n            let mesh = new BABYLON.Mesh.CreateGroundFromHeightMap(\n                `ground-${ Math.round(Math.random() * 100) }`, \n                mountain.heightMap, \n                mountain.width, \n                mountain.height, \n                mountain.subdivisions, \n                0, \n                mountain.textureHeight, \n                this.scene, \n                true\n            );\n\n            mesh.rotate(BABYLON.Axis.Y, mountain.rotation, BABYLON.Space.WORLD);\n            mesh.position.x = mountain.x;\n            mesh.position.z = mountain.z;\n            mesh.position.y = mountain.y;\n\n            mesh.grid = mountain.grid;\n\n            this.mountains.push(mesh);\n        });\n    }\n\n    setMaterials() {\n        this.mountains.forEach(mountain => {\n            let gridMaterial = new BABYLON.GridMaterial(`gridMaterial-${ Math.round(Math.random() * 100) }`, this.scene);\n\n            gridMaterial.mainColor = mountain.grid.mainColor;\n            gridMaterial.lineColor = mountain.grid.lineColor;\n            gridMaterial.gridRatio = mountain.grid.gridRatio;\n            gridMaterial.backFaceCulling = false;\n            gridMaterial.majorUnitFrequency = mountain.grid.majorUnitFrequency;\n            gridMaterial.opacity = mountain.grid.opacity;\n            mountain.material = gridMaterial;\n        });\n    }\n}\n\nexport default Mountains;","class Plane {\n    constructor(plane, scene, followCamera) {\n        this.plane = plane;\n        this.scene = scene;\n        this.followCamera = followCamera;\n        this.createPlane();\n    }\n\n    createPlane() {\n        this.plane._mesh = new BABYLON.MeshBuilder.CreateGround(\"plane\", {\n            width: this.plane.width,\n            height: this.plane.height\n        }, this.scene);\n\n        this.plane._mesh.rotate(BABYLON.Axis.Y, this.plane.rotation, BABYLON.Space.WORLD);\n\n        this.plane._mesh.material = new BABYLON.StandardMaterial(\"material\", this.scene);\n\n        this.plane._mesh.material.diffuseColor = this.plane.material.color;\n\n        this.plane._mesh.material.specularColor = this.plane.material.color;\n\n        this.plane._mesh.material.backFaceCulling = true;\n\n        this.plane._mesh.position.y = this.plane.y;\n    }\n}\n\nexport default Plane;","import Config from \"./Config\";\n\nclass Sky {\n    constructor(scene) {\n        this.scene = scene;\n        this.skybox = BABYLON.Mesh.CreateSphere(\"skyBox\", 10.0, 1000.0, this.scene);\n        BABYLON.Effect.ShadersStore.gradientVertexShader = \"precision mediump float;attribute vec3 position;attribute vec3 normal;attribute vec2 uv;uniform mat4 worldViewProjection;varying vec4 vPosition;varying vec3 vNormal;void main(){vec4 p = vec4(position,1.);vPosition = p;vNormal = normal;gl_Position = worldViewProjection * p;}\";\n        BABYLON.Effect.ShadersStore.gradientPixelShader = \"precision mediump float;uniform mat4 worldView;varying vec4 vPosition;varying vec3 vNormal;uniform float offset;uniform vec3 topColor;uniform vec3 bottomColor;void main(void){float h = normalize(vPosition+offset).y;gl_FragColor = vec4(mix(bottomColor,topColor,max(pow(max(h,0.0),0.6),0.0)),1.0);}\";\n        this.shader = new BABYLON.ShaderMaterial(\"gradient\", this.scene, \"gradient\", {});\n        this.shader.setFloat(\"offset\", 20);\n        this.shader.setColor3(\"topColor\", BABYLON.Color3.FromInts(Config.sky.colors.top.r, Config.sky.colors.top.g, Config.sky.colors.top.b));\n        this.shader.setColor3(\"bottomColor\", BABYLON.Color3.FromInts(Config.sky.colors.bottom.r, Config.sky.colors.bottom.g, Config.sky.colors.bottom.b));\n        this.shader.backFaceCulling = false;\n        this.skybox.material = this.shader;\n        this.skybox.rotation.x = -2.625;\n        this.skybox.rotation.z = -2.625;\n    }\n}\n\nexport default Sky;","import Config from \"./Config\";\nimport Utils from \"./Utils\";\n\nclass Stars {\n    constructor(scene) {\n        this.scene = scene;\n        this.stars = [];\n        this.createStars(Config.stars.amount, false);\n    }\n\n    createStars(amount, fadeIn) {\n        fadeIn = fadeIn || false;\n\n        function getRandomMinMax(min, max) {\n            return Math.random() * (max - min) + min;\n        }\n\n        for (let i = 0; i < amount; i++) {\n            let star = BABYLON.MeshBuilder.CreateBox(\"sphere\", {\n                size: getRandomMinMax(Config.stars.minSize, Config.stars.maxSize)\n            }, this.scene);\n\n            let starMaterial = new BABYLON.StandardMaterial(\"myMaterial\", this.scene);\n\n            starMaterial.emissiveColor = new BABYLON.Color3.FromHexString(Utils.getRandomPaletteColor());\n\n            if (fadeIn) {\n                starMaterial.alpha = 0;\n            }\n\n            star.position = new BABYLON.Vector3(\n                Math.random(Config.stars.minPos, Config.stars.maxPos), \n                Math.random(Config.stars.minPos, Config.stars.maxPos), \n                Math.random(Config.stars.minPos, Config.stars.maxPos)\n            );\n\n            star.material = starMaterial;\n\n            this.stars.push(star);\n        }\n    }\n\n    animate() {\n        var i = 0,\n            sceneOriginOffset = -0.1;\n\n        this.stars.forEach(star => {\n            star.position.x += -Config.consciousness.walkSpeed;\n            star.position.z += -Config.consciousness.walkSpeed;\n            star.rotation.x += Config.stars.rotationSpeed;\n            star.rotation.z += Config.stars.rotationSpeed;\n            star.rotation.y += Config.stars.rotationSpeed;\n\n            if (star.material.alpha < 1) {\n                star.material.alpha += Config.stars.fadeInSpeed;\n            }\n\n            if (star.position.x <= sceneOriginOffset && star.position.z <= sceneOriginOffset) {\n                star.material.emissiveColor = new BABYLON.Color3(1, 1, 1);\n                star.dispose();\n                this.stars.splice(i, 1);\n                this.createStars(1, true);\n            }\n\n            i++;\n        });\n    }\n}\n\nexport default Stars;","import Config from \"./Config\";\n\nclass Sun {\n    constructor(scene) {\n        this.scene = scene;\n        this.init();\n    }\n\n    init() {\n        this.sphere = new BABYLON.MeshBuilder.CreateSphere(\"sun\", {\n            diameter: Config.sun.diameter\n        }, this.scene);\n\n        this.sphere.material = new BABYLON.StandardMaterial(\"sun-material\", this.scene);\n        this.sphere.material.emissiveColor = new BABYLON.Color3.FromHexString(Config.sun.color);\n\n        this.sphere.position.x = Config.sun.x;\n        this.sphere.position.z = Config.sun.z;\n        this.sphere.position.y = Config.sun.y;\n    }\n}\n\nexport default Sun;","import Config from \"./Config\";\nimport Utils from \"./Utils\";\n\nclass Title {\n    constructor(scene) {\n        this.scene = scene;\n        this.scale = Utils.getProp(\"title\", \"scale\");\n        this.x = Utils.getProp(\"title\", \"x\");\n        this.y = Utils.getProp(\"title\", \"y\");\n        this.z = Utils.getProp(\"title\", \"z\");\n        this.rotationY = 0.75;\n        this.rotationX = -Math.PI / 2;\n        this.createTitle();\n    }\n\n    createTitle() {\n        let Writer = BABYLON.MeshWriter(this.scene, { scale: this.scale });\n\n        this.text = new Writer(\n            Config.title.text,\n            {\n                anchor: \"center\",\n                \"letter-height\": 0.5,\n                \"letter-thickness\": 0.1,\n                colors: {\n                    emissive: Config.palette[0]\n                },\n                position: {\n                    z: this.z,\n                    x: this.x,\n                    y: this.y\n                }\n            }\n        );\n\n        this.text.getMesh().rotation.y = this.rotationY;\n        this.text.getMesh().rotation.x = this.rotationX;\n    }\n}\n\nexport default Title;","import Config from \"./Config\";\n\nexport default {\n    showWorldAxis(size, scene) {\n        var makeTextPlane = function(text, color, size) {\n            var dynamicTexture = new BABYLON.DynamicTexture(\"DynamicTexture\", 50, scene, true);\n            dynamicTexture.hasAlpha = true;\n            dynamicTexture.drawText(text, 5, 40, \"bold 36px Arial\", color , \"transparent\", true);\n            var plane = BABYLON.Mesh.CreatePlane(\"TextPlane\", size, scene, true);\n            plane.material = new BABYLON.StandardMaterial(\"TextPlaneMaterial\", scene);\n            plane.material.backFaceCulling = false;\n            plane.material.specularColor = new BABYLON.Color3(0, 0, 0);\n            plane.material.diffuseTexture = dynamicTexture;\n        return plane;\n         };\n        var axisX = BABYLON.Mesh.CreateLines(\"axisX\", [ \n          BABYLON.Vector3.Zero(), new BABYLON.Vector3(size, 0, 0), new BABYLON.Vector3(size * 0.95, 0.05 * size, 0), \n          new BABYLON.Vector3(size, 0, 0), new BABYLON.Vector3(size * 0.95, -0.05 * size, 0)\n          ], scene);\n        axisX.color = new BABYLON.Color3(1, 0, 0);\n        var xChar = makeTextPlane(\"X\", \"red\", size / 10);\n        xChar.position = new BABYLON.Vector3(0.9 * size, -0.05 * size, 0);\n        var axisY = BABYLON.Mesh.CreateLines(\"axisY\", [\n            BABYLON.Vector3.Zero(), new BABYLON.Vector3(0, size, 0), new BABYLON.Vector3( -0.05 * size, size * 0.95, 0), \n            new BABYLON.Vector3(0, size, 0), new BABYLON.Vector3( 0.05 * size, size * 0.95, 0)\n            ], scene);\n        axisY.color = new BABYLON.Color3(0, 1, 0);\n        var yChar = makeTextPlane(\"Y\", \"green\", size / 10);\n        yChar.position = new BABYLON.Vector3(0, 0.9 * size, -0.05 * size);\n        var axisZ = BABYLON.Mesh.CreateLines(\"axisZ\", [\n            BABYLON.Vector3.Zero(), new BABYLON.Vector3(0, 0, size), new BABYLON.Vector3( 0 , -0.05 * size, size * 0.95),\n            new BABYLON.Vector3(0, 0, size), new BABYLON.Vector3( 0, 0.05 * size, size * 0.95)\n            ], scene);\n        axisZ.color = new BABYLON.Color3(0, 0, 1);\n        var zChar = makeTextPlane(\"Z\", \"blue\", size / 10);\n        zChar.position = new BABYLON.Vector3(0, 0.05 * size, 0.9 * size);\n    },\n    getRandomPaletteColor() {\n        return Config.palette[Math.round(Math.random() * (Config.palette.length - 1))];\n    },\n    getProp(key1, key2) {\n        if (window.innerWidth < Config.responsive.sizes.medium) {\n            return Config[key1].settings.default[key2];\n        }\n\n        if (window.innerWidth >= Config.responsize.sizes.medium) {\n\n        }\n    }\n}","import React from \"react\";\nimport Config from \"./Config\";\nimport Mountains from \"./Mountains\";\nimport Camera from \"./Camera\";\nimport Light from \"./Light\";\nimport Utils from \"./Utils\";\nimport Effects from \"./Effects\";\nimport Stars from \"./Stars\";\nimport Backgrounds from \"./Backgrounds\";\nimport Consciousness from \"./Consciousness\";\nimport Plane from \"./Plane\";\nimport Grid from \"./Grid\";\nimport Title from \"./Title\";\nimport Sky from \"./Sky\";\nimport Sun from \"./Sun\";\n\nclass World extends React.Component {\n    constructor(props) {\n        super(props);\n        this.canvas = React.createRef();\n    }\n\n    resizeToMatchDisplaySize(canvas) {\n        var displayWidth  = canvas.clientWidth  * window.devicePixelRatio,\n            displayHeight = canvas.clientHeight * window.devicePixelRatio;\n\n        if (canvas.width !== displayWidth || canvas.height !== displayHeight) {\n          canvas.width  = displayWidth;\n          canvas.height = displayHeight;\n          return true;\n        }\n\n        return false;\n    }\n\n    resize() {\n        // this.canvas.current.width = window.innerWidth;\n        // this.canvas.current.height = window.innerHeight;\n        this.resizeToMatchDisplaySize(this.canvas.current);\n        this.engine.resize();\n    }\n\n    startEngine() {\n        this.engine = new BABYLON.Engine(this.canvas.current, true, {\n            stencil: true\n        });\n        this.scene = new BABYLON.Scene(this.engine);\n        this.camera = new Camera(this.canvas.current, this.scene);\n    }\n\n    renderWorld() {\n        this.scene.clearColor = new BABYLON.Color4(0, 0, 0, 1);\n\n        if (Config.lights.enabled) {\n            this.light = new Light(this.scene);\n        }\n\n        if (Config.grid.enabled) {\n            this.grid = new Grid(this.scene);\n        }\n\n        if (Config.mountains.enabled) {\n            this.mountains = new Mountains(this.scene);\n        }\n\n        if (Config.stars.enabled) {\n            this.stars = new Stars(this.scene);\n        }\n\n        if (Config.sun.enabled) {\n            this.sun = new Sun(this.scene);\n        }\n\n        if (Config.sky.enabled) {\n            this.sky = new Sky(this.scene);\n        }\n\n        if (Config.effects.enabled) {\n            this.effects = new Effects(this);\n        }\n\n        if (Config.title.enabled) {\n            this.title = new Title(this.scene);\n        }\n\n        Config.planes.forEach(plane => {\n            if (plane.enabled) {\n                plane.mesh = new Plane(plane, this.scene, plane.followCamera);\n            }\n        });\n    }\n\n    componentDidMount() {\n        this.startEngine();\n\n        this.renderWorld();\n\n        if (Config.debug.axis) {\n            Utils.showWorldAxis(Config.debug.axisSize, this.scene);\n        }\n\n        if (Config.consciousness.enabled) {\n            this.consciousness = new Consciousness(this);\n        }\n\n        this.resize();\n\n        window.addEventListener(\"resize\", () => { \n            this.resize();\n        });\n\n        this.engine.runRenderLoop(() => { \n            this.scene.render();\n\n            if (Config.consciousness.enabled) {\n                this.consciousness.update();\n            }\n        });\n    }\n\n    render() {\n        return (\n            <div>\n                <Backgrounds />\n                <canvas \n                    touch-action=\"none\"\n                    id=\"canvas\"\n                    style={ Config.canvas.style }\n                    ref={ this.canvas }>\n                </canvas>\n            </div>\n        );\n    }\n}\n\nexport default World;","module.exports = require(\"core-js/library/fn/parse-float\");","module.exports = require(\"core-js/library/fn/parse-int\");","require('../modules/es6.parse-float');\nmodule.exports = require('../modules/_core').parseFloat;\n","require('../modules/es6.parse-int');\nmodule.exports = require('../modules/_core').parseInt;\n","var $parseFloat = require('./_global').parseFloat;\nvar $trim = require('./_string-trim').trim;\n\nmodule.exports = 1 / $parseFloat(require('./_string-ws') + '-0') !== -Infinity ? function parseFloat(str) {\n  var string = $trim(String(str), 3);\n  var result = $parseFloat(string);\n  return result === 0 && string.charAt(0) == '-' ? -0 : result;\n} : $parseFloat;\n","var $parseInt = require('./_global').parseInt;\nvar $trim = require('./_string-trim').trim;\nvar ws = require('./_string-ws');\nvar hex = /^[-+]?0[xX]/;\n\nmodule.exports = $parseInt(ws + '08') !== 8 || $parseInt(ws + '0x16') !== 22 ? function parseInt(str, radix) {\n  var string = $trim(String(str), 3);\n  return $parseInt(string, (radix >>> 0) || (hex.test(string) ? 16 : 10));\n} : $parseInt;\n","var $export = require('./_export');\nvar defined = require('./_defined');\nvar fails = require('./_fails');\nvar spaces = require('./_string-ws');\nvar space = '[' + spaces + ']';\nvar non = '\\u200b\\u0085';\nvar ltrim = RegExp('^' + space + space + '*');\nvar rtrim = RegExp(space + space + '*$');\n\nvar exporter = function (KEY, exec, ALIAS) {\n  var exp = {};\n  var FORCE = fails(function () {\n    return !!spaces[KEY]() || non[KEY]() != non;\n  });\n  var fn = exp[KEY] = FORCE ? exec(trim) : spaces[KEY];\n  if (ALIAS) exp[ALIAS] = fn;\n  $export($export.P + $export.F * FORCE, 'String', exp);\n};\n\n// 1 -> String#trimLeft\n// 2 -> String#trimRight\n// 3 -> String#trim\nvar trim = exporter.trim = function (string, TYPE) {\n  string = String(defined(string));\n  if (TYPE & 1) string = string.replace(ltrim, '');\n  if (TYPE & 2) string = string.replace(rtrim, '');\n  return string;\n};\n\nmodule.exports = exporter;\n","module.exports = '\\x09\\x0A\\x0B\\x0C\\x0D\\x20\\xA0\\u1680\\u180E\\u2000\\u2001\\u2002\\u2003' +\n  '\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200A\\u202F\\u205F\\u3000\\u2028\\u2029\\uFEFF';\n","var $export = require('./_export');\nvar $parseFloat = require('./_parse-float');\n// 18.2.4 parseFloat(string)\n$export($export.G + $export.F * (parseFloat != $parseFloat), { parseFloat: $parseFloat });\n","var $export = require('./_export');\nvar $parseInt = require('./_parse-int');\n// 18.2.5 parseInt(string, radix)\n$export($export.G + $export.F * (parseInt != $parseInt), { parseInt: $parseInt });\n","/*! Granim v2.0.0 - https://sarcadass.github.io/granim.js */\n!function t(e,i,s){function o(r,a){if(!i[r]){if(!e[r]){var h=\"function\"==typeof require&&require;if(!a&&h)return h(r,!0);if(n)return n(r,!0);var c=new Error(\"Cannot find module '\"+r+\"'\");throw c.code=\"MODULE_NOT_FOUND\",c}var l=i[r]={exports:{}};e[r][0].call(l.exports,function(t){var i=e[r][1][t];return o(i?i:t)},l,l.exports,t,e,i,s)}return i[r].exports}for(var n=\"function\"==typeof require&&require,r=0;r<s.length;r++)o(s[r]);return o}({1:[function(t,e,i){\"use strict\";function s(t){this.getElement(t.element),this.x1=0,this.y1=0,this.name=t.name||!1,this.elToSetClassOn=t.elToSetClassOn||\"body\",this.direction=t.direction||\"diagonal\",this.customDirection=t.customDirection||{},this.validateInput(\"direction\"),this.isPausedWhenNotInView=t.isPausedWhenNotInView||!1,this.states=t.states,this.stateTransitionSpeed=t.stateTransitionSpeed||1e3,this.previousTimeStamp=null,this.progress=0,this.isPaused=!1,this.isCleared=!1,this.isPausedBecauseNotInView=!1,this.context=this.canvas.getContext(\"2d\"),this.channels={},this.channelsIndex=0,this.activeState=t.defaultStateName||\"default-state\",this.isChangingState=!1,this.currentColors=[],this.currentColorsPos=[],this.activetransitionSpeed=null,this.eventPolyfill(),this.scrollDebounceThreshold=t.scrollDebounceThreshold||300,this.scrollDebounceTimeout=null,this.isImgLoaded=!1,this.isCanvasInWindowView=!1,this.firstScrollInit=!0,this.animating=!1,this.gradientLength=this.states[this.activeState].gradients[0].length,t.image&&t.image.source&&(this.image={source:t.image.source,position:t.image.position||[\"center\",\"center\"],stretchMode:t.image.stretchMode||!1,blendingMode:t.image.blendingMode||!1}),this.events={start:new CustomEvent(\"granim:start\"),end:new CustomEvent(\"granim:end\"),gradientChange:function(t){return new CustomEvent(\"granim:gradientChange\",{detail:{isLooping:t.isLooping,colorsFrom:t.colorsFrom,colorsTo:t.colorsTo,activeState:t.activeState},bubbles:!1,cancelable:!1})}},this.callbacks={onStart:\"function\"==typeof t.onStart&&t.onStart,onGradientChange:\"function\"==typeof t.onGradientChange&&t.onGradientChange,onEnd:\"function\"==typeof t.onEnd&&t.onEnd},this.getDimensions(),this.canvas.setAttribute(\"width\",this.x1),this.canvas.setAttribute(\"height\",this.y1),this.setColors(),this.image&&(this.validateInput(\"image\"),this.prepareImage()),this.pauseWhenNotInViewNameSpace=this.pauseWhenNotInView.bind(this),this.setSizeAttributesNameSpace=this.setSizeAttributes.bind(this),this.onResize(),this.isPausedWhenNotInView?this.onScroll():this.image||(this.refreshColorsAndPos(),this.animation=requestAnimationFrame(this.animateColors.bind(this)),this.animating=!0),this.callbacks.onStart&&this.callbacks.onStart(),this.canvas.dispatchEvent(this.events.start)}s.prototype.animateColors=t(\"./animateColors.js\"),s.prototype.changeBlendingMode=t(\"./changeBlendingMode.js\"),s.prototype.changeDirection=t(\"./changeDirection.js\"),s.prototype.changeState=t(\"./changeState.js\"),s.prototype.clear=t(\"./clear.js\"),s.prototype.convertColorToRgba=t(\"./convertColorToRgba.js\"),s.prototype.destroy=t(\"./destroy.js\"),s.prototype.eventPolyfill=t(\"./eventPolyfill.js\"),s.prototype.getColor=t(\"./getColor.js\"),s.prototype.getColorDiff=t(\"./getColorDiff.js\"),s.prototype.getColorPos=t(\"./getColorPos.js\"),s.prototype.getColorPosDiff=t(\"./getColorPosDiff.js\"),s.prototype.getCurrentColors=t(\"./getCurrentColors.js\"),s.prototype.getCurrentColorsPos=t(\"./getCurrentColorsPos.js\"),s.prototype.getDimensions=t(\"./getDimensions.js\"),s.prototype.getElement=t(\"./getElement.js\"),s.prototype.getLightness=t(\"./getLightness.js\"),s.prototype.makeGradient=t(\"./makeGradient.js\"),s.prototype.onResize=t(\"./onResize.js\"),s.prototype.onScroll=t(\"./onScroll.js\"),s.prototype.pause=t(\"./pause.js\"),s.prototype.pauseWhenNotInView=t(\"./pauseWhenNotInView.js\"),s.prototype.play=t(\"./play.js\"),s.prototype.prepareImage=t(\"./prepareImage.js\"),s.prototype.refreshColorsAndPos=t(\"./refreshColorsAndPos.js\"),s.prototype.setColors=t(\"./setColors.js\"),s.prototype.setDirection=t(\"./setDirection.js\"),s.prototype.setSizeAttributes=t(\"./setSizeAttributes.js\"),s.prototype.triggerError=t(\"./triggerError.js\"),s.prototype.validateInput=t(\"./validateInput.js\"),e.exports=s},{\"./animateColors.js\":2,\"./changeBlendingMode.js\":3,\"./changeDirection.js\":4,\"./changeState.js\":5,\"./clear.js\":6,\"./convertColorToRgba.js\":7,\"./destroy.js\":8,\"./eventPolyfill.js\":9,\"./getColor.js\":10,\"./getColorDiff.js\":11,\"./getColorPos.js\":12,\"./getColorPosDiff.js\":13,\"./getCurrentColors.js\":14,\"./getCurrentColorsPos.js\":15,\"./getDimensions.js\":16,\"./getElement.js\":17,\"./getLightness.js\":18,\"./makeGradient.js\":19,\"./onResize.js\":20,\"./onScroll.js\":21,\"./pause.js\":22,\"./pauseWhenNotInView.js\":23,\"./play.js\":24,\"./prepareImage.js\":25,\"./refreshColorsAndPos.js\":26,\"./setColors.js\":27,\"./setDirection.js\":28,\"./setSizeAttributes.js\":29,\"./triggerError.js\":30,\"./validateInput.js\":31}],2:[function(t,e,i){\"use strict\";e.exports=function(t){var e,i,s,o=t-this.previousTimeStamp>100,n=void 0===this.states[this.activeState].loop||this.states[this.activeState].loop;(null===this.previousTimeStamp||o)&&(this.previousTimeStamp=t),this.progress=this.progress+(t-this.previousTimeStamp),e=(this.progress/this.activetransitionSpeed*100).toFixed(2),this.previousTimeStamp=t,this.refreshColorsAndPos(e),e<100?this.animation=requestAnimationFrame(this.animateColors.bind(this)):this.channelsIndex<this.states[this.activeState].gradients.length-2||n?(this.isChangingState&&(this.activetransitionSpeed=this.states[this.activeState].transitionSpeed||5e3,this.isChangingState=!1),this.previousTimeStamp=null,this.progress=0,this.channelsIndex++,i=!1,this.channelsIndex===this.states[this.activeState].gradients.length-1?i=!0:this.channelsIndex===this.states[this.activeState].gradients.length&&(this.channelsIndex=0),s=void 0===this.states[this.activeState].gradients[this.channelsIndex+1]?this.states[this.activeState].gradients[0]:this.states[this.activeState].gradients[this.channelsIndex+1],this.setColors(),this.animation=requestAnimationFrame(this.animateColors.bind(this)),this.callbacks.onGradientChange&&this.callbacks.onGradientChange({isLooping:i,colorsFrom:this.states[this.activeState].gradients[this.channelsIndex],colorsTo:s,activeState:this.activeState}),this.canvas.dispatchEvent(this.events.gradientChange({isLooping:i,colorsFrom:this.states[this.activeState].gradients[this.channelsIndex],colorsTo:s,activeState:this.activeState}))):(cancelAnimationFrame(this.animation),this.callbacks.onEnd&&this.callbacks.onEnd(),this.canvas.dispatchEvent(new CustomEvent(\"granim:end\")))}},{}],3:[function(t,e,i){\"use strict\";e.exports=function(t){this.context.clearRect(0,0,this.x1,this.y1),this.context.globalCompositeOperation=this.image.blendingMode=t,this.validateInput(\"blendingMode\"),this.isPaused&&this.refreshColorsAndPos()}},{}],4:[function(t,e,i){\"use strict\";e.exports=function(t){this.context.clearRect(0,0,this.x1,this.y1),this.direction=t,this.validateInput(\"direction\"),this.isPaused&&this.refreshColorsAndPos()}},{}],5:[function(t,e,i){\"use strict\";e.exports=function(t){var e=this;this.activeState!==t&&(this.isPaused||(this.isPaused=!0,this.pause()),this.channelsIndex=-1,this.activetransitionSpeed=this.stateTransitionSpeed,this.activeColorsDiff=[],this.activeColorsPosDiff=[],this.activeColors=this.getCurrentColors(),this.activeColorsPos=this.getCurrentColorsPos(),this.progress=0,this.previousTimeStamp=null,this.isChangingState=!0,this.states[t].gradients[0].forEach(function(t,i,s){var o=e.convertColorToRgba(e.getColor(t)),n=e.getColorPos(t,i),r=e.getColorDiff(e.activeColors[i],o),a=e.getColorPosDiff(e.activeColorsPos[i],n);e.activeColorsDiff.push(r),e.activeColorsPosDiff.push(a)}),this.activeState=t,this.play())}},{}],6:[function(t,e,i){\"use strict\";e.exports=function(){this.isPaused?this.isPaused=!1:cancelAnimationFrame(this.animation),this.isCleared=!0,this.context.clearRect(0,0,this.x1,this.y1)}},{}],7:[function(t,e,i){\"use strict\";function s(t){var e=Object.keys(h),i=0;for(i;i<e.length;i++)if(a=h[e[i]].exec(t))return e[i];return!1}function o(t){var e=/^#?([a-f\\d])([a-f\\d])([a-f\\d])$/i;t=t.replace(e,function(t,e,i,s){return e+e+i+i+s+s});var i=/^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(t);return i?[parseInt(i[1],16),parseInt(i[2],16),parseInt(i[3],16),1]:null}function n(t,e,i){return i<0&&(i+=1),i>1&&(i-=1),i<1/6?t+6*(e-t)*i:i<.5?e:i<2/3?t+(e-t)*(2/3-i)*6:t}function r(t,e,i,s){var o,r,a,h,c;return 0===e?o=r=a=i:(h=i<.5?i*(1+e):i+e-i*e,c=2*i-h,o=n(c,h,t+1/3),r=n(c,h,t),a=n(c,h,t-1/3)),[Math.round(255*o),Math.round(255*r),Math.round(255*a),s]}var a,h={hexa:/^#(?:[0-9a-fA-F]{3}){1,2}$/,rgba:/^rgba\\((\\d{1,3}), ?(\\d{1,3}), ?(\\d{1,3}), ?(.?\\d{1,3})\\)$/,rgb:/^rgb\\((\\d{1,3}), ?(\\d{1,3}), ?(\\d{1,3})\\)$/,hsla:/^hsla\\((\\d{1,3}), ?(\\d{1,3})%, ?(\\d{1,3})%, ?(.?\\d{1,3})\\)$/,hsl:/^hsl\\((\\d{1,3}), ?(\\d{1,3})%, ?(\\d{1,3})%\\)$/};e.exports=function(t){switch(s(t)){default:this.triggerError(\"colorType\");case\"hexa\":return o(t);case\"rgba\":return[parseInt(a[1],10),parseInt(a[2],10),parseInt(a[3],10),parseFloat(a[4])];case\"rgb\":return[parseInt(a[1],10),parseInt(a[2],10),parseInt(a[3],10),1];case\"hsla\":return r(parseInt(a[1],10)/360,parseInt(a[2],10)/100,parseInt(a[3],10)/100,parseFloat(a[4]));case\"hsl\":return r(parseInt(a[1],10)/360,parseInt(a[2],10)/100,parseInt(a[3],10)/100,1)}}},{}],8:[function(t,e,i){\"use strict\";e.exports=function(){this.onResize(\"removeListeners\"),this.onScroll(\"removeListeners\"),this.clear()}},{}],9:[function(t,e,i){\"use strict\";e.exports=function(){function t(t,e){e=e||{bubbles:!1,cancelable:!1,detail:void 0};var i=document.createEvent(\"CustomEvent\");return i.initCustomEvent(t,e.bubbles,e.cancelable,e.detail),i}\"function\"!=typeof window.CustomEvent&&(t.prototype=window.Event.prototype,window.CustomEvent=t)}},{}],10:[function(t,e,i){\"use strict\";e.exports=function(t){return\"string\"==typeof t?t:\"object\"==typeof t&&t.color?t.color:void this.triggerError(\"gradient.color\")}},{}],11:[function(t,e,i){\"use strict\";e.exports=function(t,e){var i=0,s=[];for(i;i<4;i++)s.push(e[i]-t[i]);return s}},{}],12:[function(t,e,i){\"use strict\";e.exports=function(t,e){return\"object\"==typeof t&&t.pos?t.pos:parseFloat(e?(1/(this.gradientLength-1)*e).toFixed(2):0)}},{}],13:[function(t,e,i){\"use strict\";e.exports=function(t,e){return e-t}},{}],14:[function(t,e,i){\"use strict\";e.exports=function(){var t,e,i=[];for(t=0;t<this.currentColors.length;t++)for(i.push([]),e=0;e<4;e++)i[t].push(this.currentColors[t][e]);return i}},{}],15:[function(t,e,i){\"use strict\";e.exports=function(){var t,e=[];for(t=0;t<this.currentColorsPos.length;t++)e.push(this.currentColorsPos[t]);return e}},{}],16:[function(t,e,i){\"use strict\";e.exports=function(){this.x1=this.canvas.offsetWidth,this.y1=this.canvas.offsetHeight}},{}],17:[function(t,e,i){\"use strict\";e.exports=function(t){if(t instanceof HTMLCanvasElement)this.canvas=t;else{if(\"string\"!=typeof t)throw new Error(\"The element you used is neither a String, nor a HTMLCanvasElement\");this.canvas=document.querySelector(t)}if(!this.canvas)throw new Error(\"`\"+t+\"` could not be found in the DOM\")}},{}],18:[function(t,e,i){\"use strict\";e.exports=function(){var t,e,i=this.getCurrentColors(),s=null,o=i.map(function(t){return Math.max(t[0],t[1],t[2])});for(e=0;e<o.length;e++)s=null===s?o[e]:s+o[e],e===o.length-1&&(t=Math.round(s/(e+1)));return t>=128?\"light\":\"dark\"}},{}],19:[function(t,e,i){\"use strict\";e.exports=function(){var t=this.setDirection(),e=document.querySelector(this.elToSetClassOn).classList,i=0;for(this.context.clearRect(0,0,this.x1,this.y1),this.image&&this.context.drawImage(this.imageNode,this.imagePosition.x,this.imagePosition.y,this.imagePosition.width,this.imagePosition.height),i;i<this.currentColors.length;i++)t.addColorStop(this.currentColorsPos[i],\"rgba(\"+this.currentColors[i][0]+\", \"+this.currentColors[i][1]+\", \"+this.currentColors[i][2]+\", \"+this.currentColors[i][3]+\")\");this.name&&(\"light\"===this.getLightness()?(e.remove(this.name+\"-dark\"),e.add(this.name+\"-light\")):(e.remove(this.name+\"-light\"),e.add(this.name+\"-dark\"))),this.context.fillStyle=t,this.context.fillRect(0,0,this.x1,this.y1)}},{}],20:[function(t,e,i){\"use strict\";e.exports=function(t){return\"removeListeners\"===t?void window.removeEventListener(\"resize\",this.setSizeAttributesNameSpace):void window.addEventListener(\"resize\",this.setSizeAttributesNameSpace)}},{}],21:[function(t,e,i){\"use strict\";e.exports=function(t){return\"removeListeners\"===t?void window.removeEventListener(\"scroll\",this.pauseWhenNotInViewNameSpace):(window.addEventListener(\"scroll\",this.pauseWhenNotInViewNameSpace),void this.pauseWhenNotInViewNameSpace())}},{}],22:[function(t,e,i){\"use strict\";e.exports=function(t){var e=\"isPausedBecauseNotInView\"===t;this.isCleared||(e||(this.isPaused=!0),cancelAnimationFrame(this.animation),this.animating=!1)}},{}],23:[function(t,e,i){\"use strict\";e.exports=function(){var t=this;this.scrollDebounceTimeout&&clearTimeout(this.scrollDebounceTimeout),this.scrollDebounceTimeout=setTimeout(function(){var e=t.canvas.getBoundingClientRect();if(t.isCanvasInWindowView=!(e.bottom<0||e.right<0||e.left>window.innerWidth||e.top>window.innerHeight),t.isCanvasInWindowView){if(!t.isPaused||t.firstScrollInit){if(t.image&&!t.isImgLoaded)return;t.isPausedBecauseNotInView=!1,t.play(\"isPlayedBecauseInView\"),t.firstScrollInit=!1}}else!t.image&&t.firstScrollInit&&(t.refreshColorsAndPos(),t.firstScrollInit=!1),t.isPaused||t.isPausedBecauseNotInView||(t.isPausedBecauseNotInView=!0,t.pause(\"isPausedBecauseNotInView\"))},this.scrollDebounceThreshold)}},{}],24:[function(t,e,i){\"use strict\";e.exports=function(t){var e=\"isPlayedBecauseInView\"===t;e||(this.isPaused=!1),this.isCleared=!1,this.animating||(this.animation=requestAnimationFrame(this.animateColors.bind(this)),this.animating=!0)}},{}],25:[function(t,e,i){\"use strict\";e.exports=function(){function t(){function t(t){var i,s=e[t+\"1\"],o=e[\"x\"===t?\"imgOriginalWidth\":\"imgOriginalHeight\"],n=\"x\"===t?e.image.position[0]:e.image.position[1];switch(n){case\"center\":i=o>s?-(o-s)/2:(s-o)/2,e.imagePosition[t]=i,e.imagePosition[\"x\"===t?\"width\":\"height\"]=o;break;case\"top\":e.imagePosition.y=0,e.imagePosition.height=o;break;case\"bottom\":e.imagePosition.y=s-o,e.imagePosition.height=o;break;case\"right\":e.imagePosition.x=s-o,e.imagePosition.width=o;break;case\"left\":e.imagePosition.x=0,e.imagePosition.width=o}if(e.image.stretchMode)switch(n=\"x\"===t?e.image.stretchMode[0]:e.image.stretchMode[1]){case\"none\":break;case\"stretch\":e.imagePosition[t]=0,e.imagePosition[\"x\"===t?\"width\":\"height\"]=s;break;case\"stretch-if-bigger\":if(o<s)break;e.imagePosition[t]=0,e.imagePosition[\"x\"===t?\"width\":\"height\"]=s;break;case\"stretch-if-smaller\":if(o>s)break;e.imagePosition[t]=0,e.imagePosition[\"x\"===t?\"width\":\"height\"]=s}}var i,s;for(i=0;i<2;i++)s=i?\"y\":\"x\",t(s)}var e=this;return this.imagePosition||(this.imagePosition={x:0,y:0,width:0,height:0}),this.image.blendingMode&&(this.context.globalCompositeOperation=this.image.blendingMode),this.imageNode?void t():(this.imageNode=new Image,this.imageNode.onerror=function(){throw new Error(\"Granim: The image source is invalid.\")},this.imageNode.onload=function(){e.imgOriginalWidth=e.imageNode.width,e.imgOriginalHeight=e.imageNode.height,t(),e.refreshColorsAndPos(),e.isPausedWhenNotInView&&!e.isCanvasInWindowView||(e.animation=requestAnimationFrame(e.animateColors.bind(e))),e.isImgLoaded=!0},void(this.imageNode.src=this.image.source))}},{}],26:[function(t,e,i){\"use strict\";e.exports=function(t){var e,i,s,o,n=this;for(s=0;s<this.activeColors.length;s++){for(o=0;o<4;o++)e=n.activeColors[s][o]+(3!==o?Math.ceil(n.activeColorsDiff[s][o]/100*t):Math.round(n.activeColorsDiff[s][o]/100*t*100)/100),e<=255&&e>=0&&(n.currentColors[s][o]=e);i=parseFloat((n.activeColorsPos[s]+n.activeColorsPosDiff[s]/100*t).toFixed(4)),i<=1&&i>=0&&(n.currentColorsPos[s]=i)}this.makeGradient()}},{}],27:[function(t,e,i){\"use strict\";e.exports=function(){var t,e,i,s,o=this;return this.channels[this.activeState]||(this.channels[this.activeState]=[]),void 0!==this.channels[this.activeState][this.channelsIndex]?(this.activeColors=this.channels[this.activeState][this.channelsIndex].colors,this.activeColorsDiff=this.channels[this.activeState][this.channelsIndex].colorsDiff,this.activeColorsPos=this.channels[this.activeState][this.channelsIndex].colorsPos,void(this.activeColorsPosDiff=this.channels[this.activeState][this.channelsIndex].colorsPosDiff)):(this.channels[this.activeState].push([{}]),this.channels[this.activeState][this.channelsIndex].colors=[],this.channels[this.activeState][this.channelsIndex].colorsDiff=[],this.channels[this.activeState][this.channelsIndex].colorsPos=[],this.channels[this.activeState][this.channelsIndex].colorsPosDiff=[],this.activeColors=[],this.activeColorsDiff=[],this.activeColorsPos=[],this.activeColorsPosDiff=[],this.states[this.activeState].gradients[this.channelsIndex].forEach(function(n,r){var a=o.getColorPos(n,r),n=o.getColor(n),h=o.convertColorToRgba(n),c=o.channels[o.activeState];c[o.channelsIndex].colors.push(h),o.activeColors.push(h),c[o.channelsIndex].colorsPos.push(a),o.activeColorsPos.push(a),o.isCurrentColorsSet||(o.currentColors.push(o.convertColorToRgba(n)),o.currentColorsPos.push(a)),o.channelsIndex===o.states[o.activeState].gradients.length-1?(t=o.getColorDiff(c[o.channelsIndex].colors[r],c[0].colors[r]),e=o.getColorPosDiff(c[o.channelsIndex].colorsPos[r],c[0].colorsPos[r])):(i=o.convertColorToRgba(o.getColor(o.states[o.activeState].gradients[o.channelsIndex+1][r])),s=o.getColorPos(o.states[o.activeState].gradients[o.channelsIndex+1][r],r),t=o.getColorDiff(c[o.channelsIndex].colors[r],i),e=o.getColorPosDiff(c[o.channelsIndex].colorsPos[r],s)),c[o.channelsIndex].colorsDiff.push(t),o.activeColorsDiff.push(t),c[o.channelsIndex].colorsPosDiff.push(e),o.activeColorsPosDiff.push(e)}),this.activetransitionSpeed=this.states[this.activeState].transitionSpeed||5e3,void(this.isCurrentColorsSet=!0))}},{}],28:[function(t,e,i){\"use strict\";function s(t,e){return t.indexOf(\"%\")>-1?e/100*parseInt(t.split(\"%\")[0],10):parseInt(t.split(\"px\")[0],10)}e.exports=function(){var t=this.context;switch(this.direction){case\"diagonal\":return t.createLinearGradient(0,0,this.x1,this.y1);case\"left-right\":return t.createLinearGradient(0,0,this.x1,0);case\"top-bottom\":return t.createLinearGradient(this.x1/2,0,this.x1/2,this.y1);case\"radial\":return t.createRadialGradient(this.x1/2,this.y1/2,this.x1/2,this.x1/2,this.y1/2,0);case\"custom\":return t.createLinearGradient(s(this.customDirection.x0,this.x1),s(this.customDirection.y0,this.y1),s(this.customDirection.x1,this.x1),s(this.customDirection.y1,this.y1))}}},{}],29:[function(t,e,i){\"use strict\";e.exports=function(){this.getDimensions(),this.canvas.setAttribute(\"width\",this.x1),this.canvas.setAttribute(\"height\",this.y1),this.image&&this.prepareImage(),this.refreshColorsAndPos()}},{}],30:[function(t,e,i){\"use strict\";e.exports=function(t){var e=\"https://sarcadass.github.io/granim.js/api.html\";throw new Error('Granim: Input error on \"'+t+'\" option.\\nCheck the API '+e+\".\")}},{}],31:[function(t,e,i){\"use strict\";function s(t){for(var e,i=!0,s=0;i&&s<t.length;){if(e=t[s],\"string\"!=typeof e)i=!1;else{var o=null,n=null;e.indexOf(\"px\")!==-1&&(n=\"px\"),e.indexOf(\"%\")!==-1&&(n=\"%\"),o=e.split(n).filter(function(t){return t.length>0}),(!n||o.length>2||!o[0]||o[1]||!/^-?\\d+\\.?\\d*$/.test(o[0]))&&(i=!1)}s++}return i}e.exports=function(t){var e=[\"left\",\"center\",\"right\"],i=[\"top\",\"center\",\"bottom\"],o=[\"none\",\"stretch\",\"stretch-if-smaller\",\"stretch-if-bigger\"],n=[\"multiply\",\"screen\",\"normal\",\"overlay\",\"darken\",\"lighten\",\"lighter\",\"color-dodge\",\"color-burn\",\"hard-light\",\"soft-light\",\"difference\",\"exclusion\",\"hue\",\"saturation\",\"color\",\"luminosity\"],r=[\"diagonal\",\"left-right\",\"top-bottom\",\"radial\",\"custom\"];switch(t){case\"image\":Array.isArray(this.image.position)&&2===this.image.position.length&&e.indexOf(this.image.position[0])!==-1&&i.indexOf(this.image.position[1])!==-1||this.triggerError(\"image.position\"),this.image.stretchMode&&(Array.isArray(this.image.stretchMode)&&2===this.image.stretchMode.length&&o.indexOf(this.image.stretchMode[0])!==-1&&o.indexOf(this.image.stretchMode[1])!==-1||this.triggerError(\"image.stretchMode\"));break;case\"blendingMode\":n.indexOf(this.image.blendingMode)===-1&&(this.clear(),this.triggerError(\"blendingMode\"));break;case\"direction\":r.indexOf(this.direction)===-1?this.triggerError(\"direction\"):\"custom\"===this.direction&&(s([this.customDirection.x0,this.customDirection.x1,this.customDirection.y0,this.customDirection.y1])||this.triggerError(\"customDirection\"))}}},{}],32:[function(t,e,i){window.Granim=t(\"./lib/Granim.js\")},{\"./lib/Granim.js\":1}]},{},[32]);"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;;;;;AACA;AAAA;AACA;AADA;AAEA;AACA;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AADA;AAJA;AAUA;;;AAEA;AACA;AAEA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;;;;AAjCA;AACA;AAmCA;;;;;;;;;;;;;;;;;;;ACzCA;AACA;AACA;AACA;AACA;;;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;;;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;AACA;AAAA;AACA;AASA;AACA;AACA;AAAA;AACA;AAMA;AACA;AA9BA;AAgCA;;;AAEA;AACA;AACA;AADA;AAIA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;AAGA;;;;;;;;;;;;AC/GA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AADA;AASA;AACA;AACA;AACA;AAHA;AAKA;AAQA;AACA;AACA;AACA;AACA;AAHA;AADA;AAOA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAFA;AAIA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;AAFA;AADA;AAMA;AACA;AAOA;AACA;AACA;AAFA;AARA;AAVA;AAwBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAJA;AAMA;AAPA;AAHA;AAeA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AATA;AAWA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AAfA;AAiBA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;AAHA;AAKA;AACA;AADA;AAVA;AAcA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AATA;AAWA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AAVA;AAHA;AAuBA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AAHA;AANA;AAFA;AAeA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AAKA;AARA;AAUA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AAPA;AAYA;AACA;AACA;AAEA;AACA;AACA;AAHA;AAHA;AA/LA;;;;;;;;;;;;;;;;;;ACAA;AACA;AACA;;;AACA;AAAA;AACA;AAAA;AACA;AACA;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;AAGA;;;;;;;;;;;;;;;;;;AClBA;AACA;AAEA;;;AACA;AAAA;AACA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA;AACA;AAEA;AACA;;;AAEA;AACA;AACA;AACA;AACA;;;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AACA;AACA;AAGA;AACA;;;AAEA;AACA;AACA;AACA;AACA;AAHA;AAMA;AAEA;AAEA;AACA;AACA;AACA;AAGA;AACA;;;;;;AAGA;;;;;;;;;;;;;;;;;;AC7EA;AACA;AACA;;;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA;AACA;AAEA;AACA;AAFA;AAKA;AACA;AACA;AACA;AACA;AACA;;;AAEA;AACA;AAEA;AACA;AAFA;AAKA;AACA;AACA;AACA;AACA;AACA;;;AAEA;AAAA;AACA;AAAA;AACA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;;;;;;AAGA;;;;;;;;;;;;;;;;ACxFA;AACA;AACA;AAAA;AAAA;AAIA;AACA;AAEA;;;;;;;;;;;;;;;;;;ACTA;AACA;AACA;;;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;;;AACA;AAAA;AACA;AAAA;AACA;AAYA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;;;AAEA;AAAA;AACA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;AAGA;;;;;;;;;;;;;;;;;;AClDA;;;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;;;AACA;AACA;AACA;AACA;AAFA;AACA;AAIA;AACA;AACA;AAEA;AAEA;AAEA;AAEA;AACA;;;;;;AAGA;;;;;;;;;;;;;;;;AC5BA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;;;;;;;;;;;;;;;;;;ACnBA;AACA;AACA;AACA;;;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AAIA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAMA;AAEA;AACA;AACA;;;AAEA;AAAA;AACA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;;;;;;AAGA;;;;;;;;;;;;;;;;;;ACrEA;AACA;AACA;;;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;;;AACA;AACA;AACA;AADA;AAIA;AACA;AAEA;AACA;AACA;AACA;;;;;;AAGA;;;;;;;;;;;;;;;;;;;ACtBA;AACA;AACA;AACA;;;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA;AACA;AAAA;AAAA;AAEA;AAGA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;AAHA;AAPA;AAeA;AACA;AACA;;;;;;AAGA;;;;;;;;;;;;ACxCA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAIA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AA9CA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;AAFA;AAGA;AACA;;;AACA;AACA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA;AACA;AACA;AACA;AACA;AACA;;;AAEA;AACA;AACA;AADA;AAGA;AACA;AACA;;;AAEA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;;;;AApHA;AACA;AAsHA;;;;;;;;;;;ACvIA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;AACA;;;;;;;;;;;;ACDA;AACA;;;;;;;;;;;;ACDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;AC7BA;AACA;;;;;;;;;;;;ACDA;AACA;AACA;AACA;;;;;;;;;;;;ACHA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;ACHA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AACA;AADA;AAAA;AACA;AADA;AAAA;AACA;AADA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AACA;AADA;AAAA;AACA;AADA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;A","sourceRoot":""}