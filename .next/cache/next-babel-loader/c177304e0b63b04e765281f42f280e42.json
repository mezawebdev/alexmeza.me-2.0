{"ast":null,"code":"import _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport * as BABYLON from \"babylonjs\";\nimport Config from \"./Config\";\nimport * as Materials from \"babylonjs-materials\";\nimport \"../../public/js/vendor/babylon.dynamicTerrain.min.js\";\n\nvar Ground =\n/*#__PURE__*/\nfunction () {\n  function Ground(scene) {\n    _classCallCheck(this, Ground);\n\n    this.scene = scene;\n    this.defaultGround = new BABYLON.Mesh.CreateGroundFromHeightMap(\"ground\", Config.ground.heightMap, Config.ground.width, Config.ground.height, Config.ground.subdivisions, 0, Config.ground.textureHeight, this.scene, true);\n    this.setTerrain();\n    this.defaultGround.rotate(BABYLON.Axis.Y, Config.ground.rotation, BABYLON.Space.WORLD);\n    this.setMaterial();\n  }\n\n  _createClass(Ground, [{\n    key: \"setTerrain\",\n    value: function setTerrain() {\n      var _this = this;\n\n      var script = document.createElement(\"script\");\n      script.src = \"https://cdn.rawgit.com/BabylonJS/Extensions/master/DynamicTerrain/dist/babylon.dynamicTerrain.min.js\";\n      document.body.appendChild(script);\n\n      script.onload = function () {\n        var mapSubX = 500;\n        var mapSubZ = 300;\n        var terrainSub = 100;\n        var mapData = new Float32Array(mapSubX * mapSubZ * 3);\n\n        for (var l = 0; l < mapSubZ; l++) {\n          for (var w = 0; w < mapSubX; w++) {\n            mapData[3 * (l * mapSubX + w)] = (w - mapSubX * 0.5) * 2.0;\n            mapData[3 * (l * mapSubX + w) + 1] = w / (l + 1) * Math.sin((l + 1) / 2) * Math.cos(w / 2) * 2.0;\n            mapData[3 * (l * mapSubX + w) + 2] = (l - mapSubZ * 0.5) * 2.0;\n          }\n        }\n\n        var params = {\n          mapData: mapData,\n          mapSubX: mapSubX,\n          mapSubZ: mapSubZ,\n          terrainSub: terrainSub\n        };\n        terrain = new BABYLON.DynamicTerrain(\"terrain\", params, _this.scene);\n        terrain.mesh.material = terrainMaterial;\n        terrain.subToleranceX = 8;\n        terrain.subToleranceZ = 8;\n        terrain.LODLimits = [4, 3, 2, 1, 1];\n        terrainCreated = true;\n      };\n    }\n  }, {\n    key: \"setMaterial\",\n    value: function setMaterial() {\n      this.grid = new Materials.GridMaterial(\"gridMaterial\", this.scene);\n      this.grid.mainColor = Config.ground.grid.mainColor;\n      this.grid.lineColor = Config.ground.grid.lineColor;\n      this.grid.gridRatio = Config.ground.grid.gridRatio;\n      this.grid.backFaceCulling = false;\n      this.grid.majorUnitFrequency = Config.ground.grid.majorUnitFrequency;\n      this.grid.opacity = Config.ground.grid.opacity;\n      this.defaultGround.material = this.grid;\n    }\n  }]);\n\n  return Ground;\n}();\n\nexport default Ground;","map":{"version":3,"sources":["/Users/RescueAMeza_SD/Desktop/mezaWebLab/Personal/alexmeza.me/components/World/Ground.js"],"names":["BABYLON","Config","Materials","Ground","scene","defaultGround","Mesh","CreateGroundFromHeightMap","ground","heightMap","width","height","subdivisions","textureHeight","setTerrain","rotate","Axis","Y","rotation","Space","WORLD","setMaterial","script","document","createElement","src","body","appendChild","onload","mapSubX","mapSubZ","terrainSub","mapData","Float32Array","l","w","Math","sin","cos","params","terrain","DynamicTerrain","mesh","material","terrainMaterial","subToleranceX","subToleranceZ","LODLimits","terrainCreated","grid","GridMaterial","mainColor","lineColor","gridRatio","backFaceCulling","majorUnitFrequency","opacity"],"mappings":"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","sourcesContent":["import * as BABYLON from \"babylonjs\";\nimport Config from \"./Config\";\nimport * as Materials from \"babylonjs-materials\";\nimport \"../../public/js/vendor/babylon.dynamicTerrain.min.js\";\n\nclass Ground {\n    constructor(scene) {\n        this.scene = scene;\n\n        this.defaultGround = new BABYLON.Mesh.CreateGroundFromHeightMap(\n            \"ground\", \n            Config.ground.heightMap, \n            Config.ground.width, \n            Config.ground.height, \n            Config.ground.subdivisions, \n            0, \n            Config.ground.textureHeight, \n            this.scene, \n            true\n        );\n\n        this.setTerrain();\n\n        this.defaultGround.rotate(BABYLON.Axis.Y, Config.ground.rotation, BABYLON.Space.WORLD);\n\n        this.setMaterial();\n    }\n\n    setTerrain() {\n        let script = document.createElement(\"script\");\n        script.src = \"https://cdn.rawgit.com/BabylonJS/Extensions/master/DynamicTerrain/dist/babylon.dynamicTerrain.min.js\";\n        document.body.appendChild(script);\n        script.onload = () => {\n            var mapSubX = 500;\n            var mapSubZ = 300;\n            var terrainSub = 100;\n            var mapData = new Float32Array(mapSubX * mapSubZ * 3);  \n\n            for (var l = 0; l < mapSubZ; l++) {           \n                for (var w = 0; w < mapSubX; w++) {                \n                    mapData[3 *(l * mapSubX + w)] = (w - mapSubX * 0.5) * 2.0;\n                    mapData[3 * (l * mapSubX + w) + 1] = w / (l +1) * Math.sin((l + 1) / 2) * Math.cos(w / 2) * 2.0;\n                    mapData[3 * (l * mapSubX + w) + 2] = (l - mapSubZ * 0.5) * 2.0;\n               }            \n            }\n\n            var params = {\n                mapData: mapData,\n                mapSubX: mapSubX,\n                mapSubZ: mapSubZ,\n                terrainSub: terrainSub\n            };\n\n            terrain = new BABYLON.DynamicTerrain(\"terrain\", params, this.scene);\n            terrain.mesh.material = terrainMaterial;\n            terrain.subToleranceX = 8;\n            terrain.subToleranceZ = 8;\n            terrain.LODLimits = [4, 3, 2, 1, 1];\n            terrainCreated = true;\n        }\n    }\n\n    setMaterial() {\n        this.grid = new Materials.GridMaterial(\"gridMaterial\", this.scene);\n        this.grid.mainColor = Config.ground.grid.mainColor;\n        this.grid.lineColor = Config.ground.grid.lineColor;\n        this.grid.gridRatio = Config.ground.grid.gridRatio;\n        this.grid.backFaceCulling = false;\n        this.grid.majorUnitFrequency = Config.ground.grid.majorUnitFrequency;\n        this.grid.opacity = Config.ground.grid.opacity;\n        this.defaultGround.material = this.grid;\n    }\n}\n\nexport default Ground;"]},"metadata":{},"sourceType":"module"}