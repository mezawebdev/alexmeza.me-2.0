{"ast":null,"code":"var _jsxFileName = \"/Users/RescueAMeza_SD/Desktop/mezaWebLab/Personal/alexmeza.me/components/World/World.js\";\nvar __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from \"react\";\nimport * as BABYLON from 'babylonjs';\n\nclass World extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"refs\", {\n      canvas: React.createRef()\n    });\n\n    _defineProperty(this, \"engine\", new BABYLON.Engine(this.refs.canvas, true));\n  }\n\n  // scene = new BABYLON.Scene(this.engine);\n  // camera = new BABYLON.ArcRotateCamera(\"Camera\", Math.PI / 2, Math.PI / 2, 2, new BABYLON.Vector3(0,0,5), this.scene);\n  // light1 = new BABYLON.HemisphericLight(\"light1\", new BABYLON.Vector3(1, 1, 0), this.scene);\n  // sphere = BABYLON.MeshBuilder.CreateSphere(\"sphere\", {diameter:2}, this.scene);\n  render() {\n    // this.camera.attachControl(canvas, true);\n    // this.engine.runRenderLoop(() => { \n    //     console.log(this);\n    //     this.scene.render();\n    // });\n    // window.addEventListener(\"resize\", () => { \n    //     this.engine.resize();\n    // });\n    return __jsx(\"canvas\", {\n      id: \"canvas\",\n      ref: this.refs.canvas,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    });\n  }\n\n}\n\nexport default World;","map":{"version":3,"sources":["/Users/RescueAMeza_SD/Desktop/mezaWebLab/Personal/alexmeza.me/components/World/World.js"],"names":["React","BABYLON","World","Component","canvas","createRef","Engine","refs","render"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,KAAKC,OAAZ,MAAyB,WAAzB;;AAEA,MAAMC,KAAN,SAAoBF,KAAK,CAACG,SAA1B,CAAoC;AAAA;AAAA;;AAAA,kCACzB;AACHC,MAAAA,MAAM,EAAEJ,KAAK,CAACK,SAAN;AADL,KADyB;;AAAA,oCAKvB,IAAIJ,OAAO,CAACK,MAAZ,CAAmB,KAAKC,IAAL,CAAUH,MAA7B,EAAqC,IAArC,CALuB;AAAA;;AAOhC;AAEA;AAEA;AAEA;AAEAI,EAAAA,MAAM,GAAG;AACL;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA,WACI;AACI,MAAA,EAAE,EAAC,QADP;AAEI,MAAA,GAAG,EAAG,KAAKD,IAAL,CAAUH,MAFpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ;AAMH;;AAjC+B;;AAoCpC,eAAeF,KAAf","sourcesContent":["import React from \"react\";\nimport * as BABYLON from 'babylonjs';\n\nclass World extends React.Component {\n    refs = {\n        canvas: React.createRef()\n    }\n\n    engine = new BABYLON.Engine(this.refs.canvas, true);\n\n    // scene = new BABYLON.Scene(this.engine);\n\n    // camera = new BABYLON.ArcRotateCamera(\"Camera\", Math.PI / 2, Math.PI / 2, 2, new BABYLON.Vector3(0,0,5), this.scene);\n\n    // light1 = new BABYLON.HemisphericLight(\"light1\", new BABYLON.Vector3(1, 1, 0), this.scene);\n\n    // sphere = BABYLON.MeshBuilder.CreateSphere(\"sphere\", {diameter:2}, this.scene);\n\n    render() {\n        // this.camera.attachControl(canvas, true);\n\n        // this.engine.runRenderLoop(() => { \n        //     console.log(this);\n        //     this.scene.render();\n        // });\n\n        // window.addEventListener(\"resize\", () => { \n        //     this.engine.resize();\n        // });\n\n        return (\n            <canvas \n                id=\"canvas\"\n                ref={ this.refs.canvas }>\n            </canvas>\n        );\n    }\n}\n\nexport default World;"]},"metadata":{},"sourceType":"module"}