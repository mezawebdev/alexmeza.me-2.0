{"ast":null,"code":"import _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/RescueAMeza_SD/Desktop/mezaWebLab/Personal/alexmeza.me/components/World/World.js\";\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport * as BABYLON from 'babylonjs';\nimport Config from \"./Config\";\nimport Ground from \"./Ground\";\nimport Camera from \"./Camera\";\nimport Light from \"./Light\";\nimport Utils from \"./Utils\";\nimport Effects from \"./Effects\";\nimport Stars from \"./Stars\";\nimport Backgrounds from \"./Backgrounds\";\n\nvar World =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(World, _React$Component);\n\n  function World(props) {\n    var _this;\n\n    _classCallCheck(this, World);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(World).call(this, props));\n    _this.canvas = React.createRef();\n    return _this;\n  }\n\n  _createClass(World, [{\n    key: \"resize\",\n    value: function resize() {\n      this.canvas.current.width = window.innerWidth;\n      this.canvas.current.height = window.innerHeight;\n      this.engine.resize();\n    }\n  }, {\n    key: \"startEngine\",\n    value: function startEngine() {\n      this.engine = new BABYLON.Engine(this.canvas.current, true);\n      this.scene = new BABYLON.Scene(this.engine);\n      this.camera = new Camera(this.canvas.current, this.scene);\n    }\n  }, {\n    key: \"renderWorld\",\n    value: function renderWorld() {\n      this.scene.clearColor = new BABYLON.Color4(0, 0, 0, 0);\n      this.light = new Light(this.scene);\n      this.ground = new Ground(this.scene);\n      this.effects = new Effects(this.scene);\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      this.startEngine();\n      this.renderWorld();\n\n      if (Config.debug.axis) {\n        Utils.showWorldAxis(Config.debug.axisSize, this.scene);\n      }\n\n      this.engine.runRenderLoop(function () {\n        _this2.scene.render();\n      });\n\n      if (Config.stars.show) {\n        this.stars = new Stars();\n      }\n\n      this.resize();\n      window.addEventListener(\"resize\", function () {\n        _this2.resize();\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return __jsx(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, __jsx(Stars, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }), __jsx(Backgrounds, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }), __jsx(\"canvas\", {\n        id: \"canvas\",\n        style: Config.canvas.style,\n        ref: this.canvas,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return World;\n}(React.Component);\n\nexport default World;","map":{"version":3,"sources":["/Users/RescueAMeza_SD/Desktop/mezaWebLab/Personal/alexmeza.me/components/World/World.js"],"names":["React","BABYLON","Config","Ground","Camera","Light","Utils","Effects","Stars","Backgrounds","World","props","canvas","createRef","current","width","window","innerWidth","height","innerHeight","engine","resize","Engine","scene","Scene","camera","clearColor","Color4","light","ground","effects","startEngine","renderWorld","debug","axis","showWorldAxis","axisSize","runRenderLoop","render","stars","show","addEventListener","style","Component"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,KAAKC,OAAZ,MAAyB,WAAzB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAOC,WAAP,MAAwB,eAAxB;;IAEMC,K;;;;;AACF,iBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACf,+EAAMA,KAAN;AACA,UAAKC,MAAL,GAAcZ,KAAK,CAACa,SAAN,EAAd;AAFe;AAGlB;;;;6BAEQ;AACL,WAAKD,MAAL,CAAYE,OAAZ,CAAoBC,KAApB,GAA4BC,MAAM,CAACC,UAAnC;AACA,WAAKL,MAAL,CAAYE,OAAZ,CAAoBI,MAApB,GAA6BF,MAAM,CAACG,WAApC;AACA,WAAKC,MAAL,CAAYC,MAAZ;AACH;;;kCAEa;AACV,WAAKD,MAAL,GAAc,IAAInB,OAAO,CAACqB,MAAZ,CAAmB,KAAKV,MAAL,CAAYE,OAA/B,EAAwC,IAAxC,CAAd;AACA,WAAKS,KAAL,GAAa,IAAItB,OAAO,CAACuB,KAAZ,CAAkB,KAAKJ,MAAvB,CAAb;AACA,WAAKK,MAAL,GAAc,IAAIrB,MAAJ,CAAW,KAAKQ,MAAL,CAAYE,OAAvB,EAAgC,KAAKS,KAArC,CAAd;AACH;;;kCAEa;AACV,WAAKA,KAAL,CAAWG,UAAX,GAAwB,IAAIzB,OAAO,CAAC0B,MAAZ,CAAmB,CAAnB,EAAsB,CAAtB,EAAyB,CAAzB,EAA4B,CAA5B,CAAxB;AACA,WAAKC,KAAL,GAAa,IAAIvB,KAAJ,CAAU,KAAKkB,KAAf,CAAb;AACA,WAAKM,MAAL,GAAc,IAAI1B,MAAJ,CAAW,KAAKoB,KAAhB,CAAd;AACA,WAAKO,OAAL,GAAe,IAAIvB,OAAJ,CAAY,KAAKgB,KAAjB,CAAf;AACH;;;wCAEmB;AAAA;;AAChB,WAAKQ,WAAL;AAEA,WAAKC,WAAL;;AAEA,UAAI9B,MAAM,CAAC+B,KAAP,CAAaC,IAAjB,EAAuB;AACnB5B,QAAAA,KAAK,CAAC6B,aAAN,CAAoBjC,MAAM,CAAC+B,KAAP,CAAaG,QAAjC,EAA2C,KAAKb,KAAhD;AACH;;AAED,WAAKH,MAAL,CAAYiB,aAAZ,CAA0B,YAAM;AAC5B,QAAA,MAAI,CAACd,KAAL,CAAWe,MAAX;AACH,OAFD;;AAIA,UAAIpC,MAAM,CAACqC,KAAP,CAAaC,IAAjB,EAAuB;AACnB,aAAKD,KAAL,GAAa,IAAI/B,KAAJ,EAAb;AACH;;AAED,WAAKa,MAAL;AAEAL,MAAAA,MAAM,CAACyB,gBAAP,CAAwB,QAAxB,EAAkC,YAAM;AACpC,QAAA,MAAI,CAACpB,MAAL;AACH,OAFD;AAGH;;;6BAEQ;AACL,aACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,MAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,EAEI,MAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ,EAGI;AACI,QAAA,EAAE,EAAC,QADP;AAEI,QAAA,KAAK,EAAGnB,MAAM,CAACU,MAAP,CAAc8B,KAF1B;AAGI,QAAA,GAAG,EAAG,KAAK9B,MAHf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAHJ,CADJ;AAWH;;;;EA7DeZ,KAAK,CAAC2C,S;;AAgE1B,eAAejC,KAAf","sourcesContent":["import React from \"react\";\nimport * as BABYLON from 'babylonjs';\nimport Config from \"./Config\";\nimport Ground from \"./Ground\";\nimport Camera from \"./Camera\";\nimport Light from \"./Light\";\nimport Utils from \"./Utils\";\nimport Effects from \"./Effects\";\nimport Stars from \"./Stars\";\nimport Backgrounds from \"./Backgrounds\";\n\nclass World extends React.Component {\n    constructor(props) {\n        super(props);\n        this.canvas = React.createRef();\n    }\n\n    resize() {\n        this.canvas.current.width = window.innerWidth;\n        this.canvas.current.height = window.innerHeight;\n        this.engine.resize();\n    }\n\n    startEngine() {\n        this.engine = new BABYLON.Engine(this.canvas.current, true);\n        this.scene = new BABYLON.Scene(this.engine);\n        this.camera = new Camera(this.canvas.current, this.scene);\n    }\n\n    renderWorld() {\n        this.scene.clearColor = new BABYLON.Color4(0, 0, 0, 0);\n        this.light = new Light(this.scene);\n        this.ground = new Ground(this.scene);\n        this.effects = new Effects(this.scene);\n    }\n\n    componentDidMount() {\n        this.startEngine();\n\n        this.renderWorld();\n\n        if (Config.debug.axis) {\n            Utils.showWorldAxis(Config.debug.axisSize, this.scene);\n        }\n\n        this.engine.runRenderLoop(() => { \n            this.scene.render();\n        });\n\n        if (Config.stars.show) {\n            this.stars = new Stars();\n        }\n\n        this.resize();\n\n        window.addEventListener(\"resize\", () => { \n            this.resize();\n        });\n    }\n\n    render() {\n        return (\n            <div>\n                <Stars />\n                <Backgrounds />\n                <canvas \n                    id=\"canvas\"\n                    style={ Config.canvas.style }\n                    ref={ this.canvas }>\n                </canvas>\n            </div>\n        );\n    }\n}\n\nexport default World;"]},"metadata":{},"sourceType":"module"}