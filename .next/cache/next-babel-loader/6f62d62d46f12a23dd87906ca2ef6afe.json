{"ast":null,"code":"import * as BABYLON from \"babylonjs\";\nimport Config from \"./Config\";\nimport Utils from \"./Utils\";\n\nclass Camera {\n  constructor(canvas, scene) {\n    this.setCamera();\n\n    if (Config.debug.cameraControls) {\n      this.defaultCamera.attachControl(canvas, true);\n    }\n  }\n\n  setCamera() {\n    switch (Config.camera.type) {\n      case \"free\":\n        this.defaultCamera = new BABYLON.UniversalCamera(\"UniversalCamera\", Config.camera.initialPosition, this.scene);\n        break;\n\n      case \"arc\":\n        this.defaultCamera = new BABYLON.ArcRotateCamera(\"Camera\", 0, 0, 0, Config.camera.initialPosition, this.scene);\n        break;\n    }\n  }\n\n}\n\nexport default Camera;","map":{"version":3,"sources":["/Users/RescueAMeza_SD/Desktop/mezaWebLab/Personal/alexmeza.me/components/World/Camera.js"],"names":["BABYLON","Config","Utils","Camera","constructor","canvas","scene","setCamera","debug","cameraControls","defaultCamera","attachControl","camera","type","UniversalCamera","initialPosition","ArcRotateCamera"],"mappings":"AAAA,OAAO,KAAKA,OAAZ,MAAyB,WAAzB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,KAAP,MAAkB,SAAlB;;AAEA,MAAMC,MAAN,CAAa;AACTC,EAAAA,WAAW,CAACC,MAAD,EAASC,KAAT,EAAgB;AACvB,SAAKC,SAAL;;AAEA,QAAIN,MAAM,CAACO,KAAP,CAAaC,cAAjB,EAAiC;AAC7B,WAAKC,aAAL,CAAmBC,aAAnB,CAAiCN,MAAjC,EAAyC,IAAzC;AACH;AACJ;;AAEDE,EAAAA,SAAS,GAAG;AACR,YAAQN,MAAM,CAACW,MAAP,CAAcC,IAAtB;AACI,WAAK,MAAL;AACI,aAAKH,aAAL,GAAqB,IAAIV,OAAO,CAACc,eAAZ,CAA4B,iBAA5B,EAA+Cb,MAAM,CAACW,MAAP,CAAcG,eAA7D,EAA8E,KAAKT,KAAnF,CAArB;AACJ;;AACA,WAAK,KAAL;AACI,aAAKI,aAAL,GAAqB,IAAIV,OAAO,CAACgB,eAAZ,CAA4B,QAA5B,EAAsC,CAAtC,EAAyC,CAAzC,EAA4C,CAA5C,EAA+Cf,MAAM,CAACW,MAAP,CAAcG,eAA7D,EAA8E,KAAKT,KAAnF,CAArB;AACJ;AANJ;AAQH;;AAlBQ;;AAqBb,eAAeH,MAAf","sourcesContent":["import * as BABYLON from \"babylonjs\";\nimport Config from \"./Config\";\nimport Utils from \"./Utils\";\n\nclass Camera {\n    constructor(canvas, scene) {\n        this.setCamera();\n        \n        if (Config.debug.cameraControls) {\n            this.defaultCamera.attachControl(canvas, true);\n        }\n    }\n\n    setCamera() {\n        switch (Config.camera.type) {\n            case \"free\":\n                this.defaultCamera = new BABYLON.UniversalCamera(\"UniversalCamera\", Config.camera.initialPosition, this.scene);\n            break;\n            case \"arc\":\n                this.defaultCamera = new BABYLON.ArcRotateCamera(\"Camera\", 0, 0, 0, Config.camera.initialPosition, this.scene);\n            break;\n        }\n    }\n}\n\nexport default Camera;"]},"metadata":{},"sourceType":"module"}