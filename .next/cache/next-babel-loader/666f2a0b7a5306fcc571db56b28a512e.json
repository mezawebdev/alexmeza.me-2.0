{"ast":null,"code":"import _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/RescueAMeza_SD/Desktop/mezaWebLab/Personal/alexmeza.me/components/World/World.js\";\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport * as BABYLON from 'babylonjs';\n\nvar World =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(World, _React$Component);\n\n  function World() {\n    var _this;\n\n    _classCallCheck(this, World);\n\n    _this.canvas = React.createRef();\n    return _possibleConstructorReturn(_this);\n  } // engine = new BABYLON.Engine(this.refs.canvas.current, true);\n  // scene = new BABYLON.Scene(this.engine);\n  // camera = new BABYLON.ArcRotateCamera(\"Camera\", Math.PI / 2, Math.PI / 2, 2, new BABYLON.Vector3(0,0,5), this.scene);\n  // light1 = new BABYLON.HemisphericLight(\"light1\", new BABYLON.Vector3(1, 1, 0), this.scene);\n  // sphere = BABYLON.MeshBuilder.CreateSphere(\"sphere\", {diameter:2}, this.scene);\n\n\n  _createClass(World, [{\n    key: \"render\",\n    value: function render() {\n      console.log(this); // this.camera.attachControl(canvas, true);\n      // this.engine.runRenderLoop(() => { \n      //     console.log(this);\n      //     this.scene.render();\n      // });\n      // window.addEventListener(\"resize\", () => { \n      //     this.engine.resize();\n      // });\n\n      return __jsx(\"canvas\", {\n        id: \"canvas\",\n        ref: this.canvas.current,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      });\n    }\n  }]);\n\n  return World;\n}(React.Component);\n\nexport default World;","map":{"version":3,"sources":["/Users/RescueAMeza_SD/Desktop/mezaWebLab/Personal/alexmeza.me/components/World/World.js"],"names":["React","BABYLON","World","canvas","createRef","console","log","current","Component"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,KAAKC,OAAZ,MAAyB,WAAzB;;IAEMC,K;;;;;AACF,mBAAc;AAAA;;AAAA;;AACV,UAAKC,MAAL,GAAcH,KAAK,CAACI,SAAN,EAAd;AADU;AAEb,G,CAED;AAEA;AAEA;AAEA;AAEA;;;;;6BAES;AACLC,MAAAA,OAAO,CAACC,GAAR,CAAY,IAAZ,EADK,CAEL;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;;AAEA,aACI;AACI,QAAA,EAAE,EAAC,QADP;AAEI,QAAA,GAAG,EAAG,KAAKH,MAAL,CAAYI,OAFtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ;AAMH;;;;EAlCeP,KAAK,CAACQ,S;;AAqC1B,eAAeN,KAAf","sourcesContent":["import React from \"react\";\nimport * as BABYLON from 'babylonjs';\n\nclass World extends React.Component {\n    constructor() {\n        this.canvas = React.createRef();\n    }\n\n    // engine = new BABYLON.Engine(this.refs.canvas.current, true);\n\n    // scene = new BABYLON.Scene(this.engine);\n\n    // camera = new BABYLON.ArcRotateCamera(\"Camera\", Math.PI / 2, Math.PI / 2, 2, new BABYLON.Vector3(0,0,5), this.scene);\n\n    // light1 = new BABYLON.HemisphericLight(\"light1\", new BABYLON.Vector3(1, 1, 0), this.scene);\n\n    // sphere = BABYLON.MeshBuilder.CreateSphere(\"sphere\", {diameter:2}, this.scene);\n\n    render() {\n        console.log(this);\n        // this.camera.attachControl(canvas, true);\n\n        // this.engine.runRenderLoop(() => { \n        //     console.log(this);\n        //     this.scene.render();\n        // });\n\n        // window.addEventListener(\"resize\", () => { \n        //     this.engine.resize();\n        // });\n\n        return (\n            <canvas \n                id=\"canvas\"\n                ref={ this.canvas.current }>\n            </canvas>\n        );\n    }\n}\n\nexport default World;"]},"metadata":{},"sourceType":"module"}