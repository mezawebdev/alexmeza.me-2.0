{"ast":null,"code":"import _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\n\nvar DynamicGround =\n/*#__PURE__*/\nfunction () {\n  function DynamicGround(scene) {\n    _classCallCheck(this, DynamicGround);\n\n    this.scene = scene;\n    var mapSubX = 500,\n        mapSubZ = 500,\n        mapData = new Float32Array(mapSubX * mapSubZ * 3); // for (var l = 0; l < mapSubZ; l++) {           \n    //     for (var w = 0; w < mapSubX; w++) {                \n    //         mapData[3 *(l * mapSubX + w)] = (w - mapSubX * 0.5) * 2.0;\n    //         mapData[3 * (l * mapSubX + w) + 1] = w / (l +1) * Math.sin(l / 2) * Math.cos(w / 2) * 2.0;\n    //         mapData[3 * (l * mapSubX + w) + 2] = (l - mapSubZ * 0.5) * 2.0;\n    //    }            \n    // }\n\n    var params = {\n      mapData: mapData,\n      mapSubX: mapSubX,\n      mapSubZ: mapSubZ,\n      terrainSub: 200\n    };\n    this.ground = new BABYLON.DynamicTerrain(\"terrain\", params, this.scene);\n    this.ground.subToleranceX = 16;\n    this.ground.subToleranceZ = 16;\n    this.ground.LODLimits = [4, 3, 2, 1, 1];\n  }\n\n  _createClass(DynamicGround, [{\n    key: \"setMaterial\",\n    value: function setMaterial() {\n      this.gridMaterial = new BABYLON.GridMaterial(\"gridMaterial\", this.scene);\n      this.gridMaterial.mainColor = Config.ground[\"static\"].grid.mainColor;\n      this.gridMaterial.lineColor = Config.ground[\"static\"].grid.lineColor;\n      this.gridMaterial.gridRatio = Config.ground[\"static\"].grid.gridRatio;\n      this.gridMaterial.backFaceCulling = false;\n      this.gridMaterial.majorUnitFrequency = Config.ground[\"static\"].grid.majorUnitFrequency;\n      this.gridMaterial.opacity = Config.ground[\"static\"].grid.opacity;\n      this.ground.mesh.material = this.gridMaterial;\n    }\n  }]);\n\n  return DynamicGround;\n}();\n\nexport default DynamicGround;","map":{"version":3,"sources":["/Users/RescueAMeza_SD/Desktop/mezaWebLab/Personal/alexmeza.me/components/World/DynamicGround.js"],"names":["DynamicGround","scene","mapSubX","mapSubZ","mapData","Float32Array","params","terrainSub","ground","BABYLON","DynamicTerrain","subToleranceX","subToleranceZ","LODLimits","gridMaterial","GridMaterial","mainColor","Config","grid","lineColor","gridRatio","backFaceCulling","majorUnitFrequency","opacity","mesh","material"],"mappings":";;;IAAMA,a;;;AACF,yBAAYC,KAAZ,EAAmB;AAAA;;AACf,SAAKA,KAAL,GAAaA,KAAb;AAEA,QAAIC,OAAO,GAAG,GAAd;AAAA,QACIC,OAAO,GAAG,GADd;AAAA,QAEIC,OAAO,GAAG,IAAIC,YAAJ,CAAiBH,OAAO,GAAGC,OAAV,GAAoB,CAArC,CAFd,CAHe,CAOf;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,QAAIG,MAAM,GAAG;AACTF,MAAAA,OAAO,EAAEA,OADA;AAETF,MAAAA,OAAO,EAAEA,OAFA;AAGTC,MAAAA,OAAO,EAAEA,OAHA;AAITI,MAAAA,UAAU,EAAE;AAJH,KAAb;AAOA,SAAKC,MAAL,GAAc,IAAIC,OAAO,CAACC,cAAZ,CAA2B,SAA3B,EAAsCJ,MAAtC,EAA8C,KAAKL,KAAnD,CAAd;AACA,SAAKO,MAAL,CAAYG,aAAZ,GAA4B,EAA5B;AACA,SAAKH,MAAL,CAAYI,aAAZ,GAA4B,EAA5B;AACA,SAAKJ,MAAL,CAAYK,SAAZ,GAAwB,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,EAAa,CAAb,CAAxB;AACH;;;;kCAEa;AACV,WAAKC,YAAL,GAAoB,IAAIL,OAAO,CAACM,YAAZ,CAAyB,cAAzB,EAAyC,KAAKd,KAA9C,CAApB;AACA,WAAKa,YAAL,CAAkBE,SAAlB,GAA8BC,MAAM,CAACT,MAAP,WAAqBU,IAArB,CAA0BF,SAAxD;AACA,WAAKF,YAAL,CAAkBK,SAAlB,GAA8BF,MAAM,CAACT,MAAP,WAAqBU,IAArB,CAA0BC,SAAxD;AACA,WAAKL,YAAL,CAAkBM,SAAlB,GAA8BH,MAAM,CAACT,MAAP,WAAqBU,IAArB,CAA0BE,SAAxD;AACA,WAAKN,YAAL,CAAkBO,eAAlB,GAAoC,KAApC;AACA,WAAKP,YAAL,CAAkBQ,kBAAlB,GAAuCL,MAAM,CAACT,MAAP,WAAqBU,IAArB,CAA0BI,kBAAjE;AACA,WAAKR,YAAL,CAAkBS,OAAlB,GAA4BN,MAAM,CAACT,MAAP,WAAqBU,IAArB,CAA0BK,OAAtD;AACA,WAAKf,MAAL,CAAYgB,IAAZ,CAAiBC,QAAjB,GAA4B,KAAKX,YAAjC;AACH;;;;;;AAGL,eAAed,aAAf","sourcesContent":["class DynamicGround {\n    constructor(scene) {\n        this.scene = scene;\n\n        let mapSubX = 500,\n            mapSubZ = 500,\n            mapData = new Float32Array(mapSubX * mapSubZ * 3);   \n\n        // for (var l = 0; l < mapSubZ; l++) {           \n        //     for (var w = 0; w < mapSubX; w++) {                \n        //         mapData[3 *(l * mapSubX + w)] = (w - mapSubX * 0.5) * 2.0;\n        //         mapData[3 * (l * mapSubX + w) + 1] = w / (l +1) * Math.sin(l / 2) * Math.cos(w / 2) * 2.0;\n        //         mapData[3 * (l * mapSubX + w) + 2] = (l - mapSubZ * 0.5) * 2.0;\n        //    }            \n        // }\n\n        var params = {\n            mapData: mapData,\n            mapSubX: mapSubX,\n            mapSubZ: mapSubZ,\n            terrainSub: 200\n        };\n\n        this.ground = new BABYLON.DynamicTerrain(\"terrain\", params, this.scene);\n        this.ground.subToleranceX = 16;\n        this.ground.subToleranceZ = 16;\n        this.ground.LODLimits = [4, 3, 2, 1, 1];\n    }\n\n    setMaterial() {\n        this.gridMaterial = new BABYLON.GridMaterial(\"gridMaterial\", this.scene);\n        this.gridMaterial.mainColor = Config.ground.static.grid.mainColor;\n        this.gridMaterial.lineColor = Config.ground.static.grid.lineColor;\n        this.gridMaterial.gridRatio = Config.ground.static.grid.gridRatio;\n        this.gridMaterial.backFaceCulling = false;\n        this.gridMaterial.majorUnitFrequency = Config.ground.static.grid.majorUnitFrequency;\n        this.gridMaterial.opacity = Config.ground.static.grid.opacity;\n        this.ground.mesh.material = this.gridMaterial;\n    }\n}\n\nexport default DynamicGround;"]},"metadata":{},"sourceType":"module"}