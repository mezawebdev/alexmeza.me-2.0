{"ast":null,"code":"import Config from \"./Config\";\n\nclass Mountains {\n  constructor(scene) {\n    this.scene = scene;\n    this.createMountains();\n    this.setMaterials();\n  }\n\n  createMountains() {\n    Config.mountains.meshes.forEach(mountain => {\n      mountain.mesh = new BABYLON.Mesh.CreateGroundFromHeightMap(`ground-${Math.round(Math.random() * 100)}`, mountain.heightMap, mountain.width, mountain.height, mountain.subdivisions, 0, mountain.textureHeight, this.scene, true);\n      mountain.mesh.rotate(BABYLON.Axis.Y, mountain.rotation, BABYLON.Space.WORLD);\n      mountain.mesh.position.x = mountain.x;\n      mountain.mesh.position.z = mountain.z;\n      mountain.mesh.position.y = mountain.y;\n    });\n  }\n\n  setMaterials() {\n    Config.mountains.forEach(mountain => {\n      let gridMaterial = new BABYLON.GridMaterial(`gridMaterial-${Math.round(Math.random() * 100)}`, this.scene);\n      gridMaterial.mainColor = mountain.grid.mainColor;\n      gridMaterial.lineColor = mountain.grid.lineColor;\n      gridMaterial.gridRatio = mountain.grid.gridRatio;\n      gridMaterial.backFaceCulling = false;\n      gridMaterial.majorUnitFrequency = mountain.grid.majorUnitFrequency;\n      gridMaterial.opacity = mountain.grid.opacity;\n      mountain.mesh.material = gridMaterial;\n    });\n  }\n\n}\n\nexport default Mountains;","map":{"version":3,"sources":["/Users/RescueAMeza_SD/Desktop/mezaWebLab/Personal/alexmeza.me/components/World/Mountains.js"],"names":["Config","Mountains","constructor","scene","createMountains","setMaterials","mountains","meshes","forEach","mountain","mesh","BABYLON","Mesh","CreateGroundFromHeightMap","Math","round","random","heightMap","width","height","subdivisions","textureHeight","rotate","Axis","Y","rotation","Space","WORLD","position","x","z","y","gridMaterial","GridMaterial","mainColor","grid","lineColor","gridRatio","backFaceCulling","majorUnitFrequency","opacity","material"],"mappings":"AAAA,OAAOA,MAAP,MAAmB,UAAnB;;AAEA,MAAMC,SAAN,CAAgB;AACZC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,SAAKA,KAAL,GAAaA,KAAb;AACA,SAAKC,eAAL;AACA,SAAKC,YAAL;AACH;;AAEDD,EAAAA,eAAe,GAAG;AACdJ,IAAAA,MAAM,CAACM,SAAP,CAAiBC,MAAjB,CAAwBC,OAAxB,CAAgCC,QAAQ,IAAI;AACxCA,MAAAA,QAAQ,CAACC,IAAT,GAAgB,IAAIC,OAAO,CAACC,IAAR,CAAaC,yBAAjB,CACX,UAAUC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,GAA3B,CAAiC,EADhC,EAEZP,QAAQ,CAACQ,SAFG,EAGZR,QAAQ,CAACS,KAHG,EAIZT,QAAQ,CAACU,MAJG,EAKZV,QAAQ,CAACW,YALG,EAMZ,CANY,EAOZX,QAAQ,CAACY,aAPG,EAQZ,KAAKlB,KARO,EASZ,IATY,CAAhB;AAYAM,MAAAA,QAAQ,CAACC,IAAT,CAAcY,MAAd,CAAqBX,OAAO,CAACY,IAAR,CAAaC,CAAlC,EAAqCf,QAAQ,CAACgB,QAA9C,EAAwDd,OAAO,CAACe,KAAR,CAAcC,KAAtE;AACAlB,MAAAA,QAAQ,CAACC,IAAT,CAAckB,QAAd,CAAuBC,CAAvB,GAA2BpB,QAAQ,CAACoB,CAApC;AACApB,MAAAA,QAAQ,CAACC,IAAT,CAAckB,QAAd,CAAuBE,CAAvB,GAA2BrB,QAAQ,CAACqB,CAApC;AACArB,MAAAA,QAAQ,CAACC,IAAT,CAAckB,QAAd,CAAuBG,CAAvB,GAA2BtB,QAAQ,CAACsB,CAApC;AACH,KAjBD;AAkBH;;AAED1B,EAAAA,YAAY,GAAG;AACXL,IAAAA,MAAM,CAACM,SAAP,CAAiBE,OAAjB,CAAyBC,QAAQ,IAAI;AACjC,UAAIuB,YAAY,GAAG,IAAIrB,OAAO,CAACsB,YAAZ,CAA0B,gBAAgBnB,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,GAA3B,CAAiC,EAA3E,EAA8E,KAAKb,KAAnF,CAAnB;AAEA6B,MAAAA,YAAY,CAACE,SAAb,GAAyBzB,QAAQ,CAAC0B,IAAT,CAAcD,SAAvC;AACAF,MAAAA,YAAY,CAACI,SAAb,GAAyB3B,QAAQ,CAAC0B,IAAT,CAAcC,SAAvC;AACAJ,MAAAA,YAAY,CAACK,SAAb,GAAyB5B,QAAQ,CAAC0B,IAAT,CAAcE,SAAvC;AACAL,MAAAA,YAAY,CAACM,eAAb,GAA+B,KAA/B;AACAN,MAAAA,YAAY,CAACO,kBAAb,GAAkC9B,QAAQ,CAAC0B,IAAT,CAAcI,kBAAhD;AACAP,MAAAA,YAAY,CAACQ,OAAb,GAAuB/B,QAAQ,CAAC0B,IAAT,CAAcK,OAArC;AACA/B,MAAAA,QAAQ,CAACC,IAAT,CAAc+B,QAAd,GAAyBT,YAAzB;AACH,KAVD;AAWH;;AAxCW;;AA2ChB,eAAe/B,SAAf","sourcesContent":["import Config from \"./Config\";\n\nclass Mountains {\n    constructor(scene) {\n        this.scene = scene;\n        this.createMountains();\n        this.setMaterials();\n    }\n\n    createMountains() {\n        Config.mountains.meshes.forEach(mountain => {\n            mountain.mesh = new BABYLON.Mesh.CreateGroundFromHeightMap(\n                `ground-${ Math.round(Math.random() * 100) }`, \n                mountain.heightMap, \n                mountain.width, \n                mountain.height, \n                mountain.subdivisions, \n                0, \n                mountain.textureHeight, \n                this.scene, \n                true\n            );\n\n            mountain.mesh.rotate(BABYLON.Axis.Y, mountain.rotation, BABYLON.Space.WORLD);\n            mountain.mesh.position.x = mountain.x;\n            mountain.mesh.position.z = mountain.z;\n            mountain.mesh.position.y = mountain.y;\n        });\n    }\n\n    setMaterials() {\n        Config.mountains.forEach(mountain => {\n            let gridMaterial = new BABYLON.GridMaterial(`gridMaterial-${ Math.round(Math.random() * 100) }`, this.scene);\n\n            gridMaterial.mainColor = mountain.grid.mainColor;\n            gridMaterial.lineColor = mountain.grid.lineColor;\n            gridMaterial.gridRatio = mountain.grid.gridRatio;\n            gridMaterial.backFaceCulling = false;\n            gridMaterial.majorUnitFrequency = mountain.grid.majorUnitFrequency;\n            gridMaterial.opacity = mountain.grid.opacity;\n            mountain.mesh.material = gridMaterial;\n        });\n    }\n}\n\nexport default Mountains;"]},"metadata":{},"sourceType":"module"}