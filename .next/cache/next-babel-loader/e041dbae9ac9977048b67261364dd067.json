{"ast":null,"code":"import _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport Config from \"./Config\";\n\nvar Ground =\n/*#__PURE__*/\nfunction () {\n  function Ground(scene) {\n    _classCallCheck(this, Ground);\n\n    this.scene = scene;\n    this.createGround();\n    this.setMaterial();\n  }\n\n  _createClass(Ground, [{\n    key: \"createGround\",\n    value: function createGround() {\n      // this.defaultGround = new BABYLON.Mesh.CreateGroundFromHeightMap(\n      // this.defaultGround = new BABYLON.Mesh.CreateGroundFromHeightMap(\n      //     \"ground\", \n      //     Config.ground.heightMap, \n      //     Config.ground.width, \n      //     Config.ground.height, \n      //     Config.ground.subdivisions, \n      //     0, \n      //     Config.ground.textureHeight, \n      //     this.scene, \n      //     true\n      // );\n      this.defaultMountains = new BABYLON.MeshBuilder.CreatePlane(\"ground\", {\n        width: Config.ground.width,\n        height: Config.ground.height\n      });\n      this.defaultGround.rotate(BABYLON.Axis.Y, Config.ground.rotation, BABYLON.Space.WORLD);\n      this.defaultGround.position.x = Config.ground.x;\n      this.defaultGround.position.z = Config.ground.z;\n    }\n  }, {\n    key: \"setMaterial\",\n    value: function setMaterial() {\n      this.gridMaterial = new BABYLON.GridMaterial(\"gridMaterial\", this.scene);\n      this.gridMaterial.mainColor = Config.ground.grid.mainColor;\n      this.gridMaterial.lineColor = Config.ground.grid.lineColor;\n      this.gridMaterial.gridRatio = Config.ground.grid.gridRatio;\n      this.gridMaterial.backFaceCulling = false;\n      this.gridMaterial.majorUnitFrequency = Config.ground.grid.majorUnitFrequency;\n      this.gridMaterial.opacity = Config.ground.grid.opacity;\n      this.gridMaterial.emissiveColor = Config.ground.grid.lineColor;\n      this.defaultGround.material = this.gridMaterial;\n    }\n  }]);\n\n  return Ground;\n}();\n\nexport default Ground;","map":{"version":3,"sources":["/Users/RescueAMeza_SD/Desktop/mezaWebLab/Personal/alexmeza.me/components/World/Ground.js"],"names":["Config","Ground","scene","createGround","setMaterial","defaultMountains","BABYLON","MeshBuilder","CreatePlane","width","ground","height","defaultGround","rotate","Axis","Y","rotation","Space","WORLD","position","x","z","gridMaterial","GridMaterial","mainColor","grid","lineColor","gridRatio","backFaceCulling","majorUnitFrequency","opacity","emissiveColor","material"],"mappings":";;AAAA,OAAOA,MAAP,MAAmB,UAAnB;;IAEMC,M;;;AACF,kBAAYC,KAAZ,EAAmB;AAAA;;AACf,SAAKA,KAAL,GAAaA,KAAb;AACA,SAAKC,YAAL;AACA,SAAKC,WAAL;AACH;;;;mCAEc;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,WAAKC,gBAAL,GAAwB,IAAIC,OAAO,CAACC,WAAR,CAAoBC,WAAxB,CAAoC,QAApC,EAA8C;AAClEC,QAAAA,KAAK,EAAET,MAAM,CAACU,MAAP,CAAcD,KAD6C;AAElEE,QAAAA,MAAM,EAAEX,MAAM,CAACU,MAAP,CAAcC;AAF4C,OAA9C,CAAxB;AAKA,WAAKC,aAAL,CAAmBC,MAAnB,CAA0BP,OAAO,CAACQ,IAAR,CAAaC,CAAvC,EAA0Cf,MAAM,CAACU,MAAP,CAAcM,QAAxD,EAAkEV,OAAO,CAACW,KAAR,CAAcC,KAAhF;AACA,WAAKN,aAAL,CAAmBO,QAAnB,CAA4BC,CAA5B,GAAgCpB,MAAM,CAACU,MAAP,CAAcU,CAA9C;AACA,WAAKR,aAAL,CAAmBO,QAAnB,CAA4BE,CAA5B,GAAgCrB,MAAM,CAACU,MAAP,CAAcW,CAA9C;AACH;;;kCAEa;AACV,WAAKC,YAAL,GAAoB,IAAIhB,OAAO,CAACiB,YAAZ,CAAyB,cAAzB,EAAyC,KAAKrB,KAA9C,CAApB;AACA,WAAKoB,YAAL,CAAkBE,SAAlB,GAA8BxB,MAAM,CAACU,MAAP,CAAce,IAAd,CAAmBD,SAAjD;AACA,WAAKF,YAAL,CAAkBI,SAAlB,GAA8B1B,MAAM,CAACU,MAAP,CAAce,IAAd,CAAmBC,SAAjD;AACA,WAAKJ,YAAL,CAAkBK,SAAlB,GAA8B3B,MAAM,CAACU,MAAP,CAAce,IAAd,CAAmBE,SAAjD;AACA,WAAKL,YAAL,CAAkBM,eAAlB,GAAoC,KAApC;AACA,WAAKN,YAAL,CAAkBO,kBAAlB,GAAuC7B,MAAM,CAACU,MAAP,CAAce,IAAd,CAAmBI,kBAA1D;AACA,WAAKP,YAAL,CAAkBQ,OAAlB,GAA4B9B,MAAM,CAACU,MAAP,CAAce,IAAd,CAAmBK,OAA/C;AACA,WAAKR,YAAL,CAAkBS,aAAlB,GAAkC/B,MAAM,CAACU,MAAP,CAAce,IAAd,CAAmBC,SAArD;AACA,WAAKd,aAAL,CAAmBoB,QAAnB,GAA8B,KAAKV,YAAnC;AACH;;;;;;AAGL,eAAerB,MAAf","sourcesContent":["import Config from \"./Config\";\n\nclass Ground {\n    constructor(scene) {\n        this.scene = scene;\n        this.createGround();\n        this.setMaterial();\n    }\n\n    createGround() {\n        // this.defaultGround = new BABYLON.Mesh.CreateGroundFromHeightMap(\n        // this.defaultGround = new BABYLON.Mesh.CreateGroundFromHeightMap(\n        //     \"ground\", \n        //     Config.ground.heightMap, \n        //     Config.ground.width, \n        //     Config.ground.height, \n        //     Config.ground.subdivisions, \n        //     0, \n        //     Config.ground.textureHeight, \n        //     this.scene, \n        //     true\n        // );\n\n        this.defaultMountains = new BABYLON.MeshBuilder.CreatePlane(\"ground\", {\n            width: Config.ground.width,\n            height: Config.ground.height\n        });\n        \n        this.defaultGround.rotate(BABYLON.Axis.Y, Config.ground.rotation, BABYLON.Space.WORLD);\n        this.defaultGround.position.x = Config.ground.x;\n        this.defaultGround.position.z = Config.ground.z;\n    }\n\n    setMaterial() {\n        this.gridMaterial = new BABYLON.GridMaterial(\"gridMaterial\", this.scene);\n        this.gridMaterial.mainColor = Config.ground.grid.mainColor;\n        this.gridMaterial.lineColor = Config.ground.grid.lineColor;\n        this.gridMaterial.gridRatio = Config.ground.grid.gridRatio;\n        this.gridMaterial.backFaceCulling = false;\n        this.gridMaterial.majorUnitFrequency = Config.ground.grid.majorUnitFrequency;\n        this.gridMaterial.opacity = Config.ground.grid.opacity;\n        this.gridMaterial.emissiveColor = Config.ground.grid.lineColor;\n        this.defaultGround.material = this.gridMaterial;\n    }\n}\n\nexport default Ground;"]},"metadata":{},"sourceType":"module"}