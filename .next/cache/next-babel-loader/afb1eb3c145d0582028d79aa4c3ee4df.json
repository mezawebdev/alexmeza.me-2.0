{"ast":null,"code":"var _jsxFileName = \"/Users/RescueAMeza_SD/Desktop/mezaWebLab/Personal/alexmeza.me/components/World/World.js\";\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport * as BABYLON from 'babylonjs';\nimport Config from \"./Config\";\nimport Plane from \"./Plane\";\nimport Camera from \"./Camera\";\nimport Light from \"./Light\";\n\nclass World extends React.Component {\n  constructor(props) {\n    super(props);\n    this.canvas = React.createRef();\n  }\n\n  resize() {\n    console.log(this);\n    this.canvas.current.width = window.innerWidth;\n    this.canvas.current.height = window.innerHeight;\n    this.engine.resize();\n  }\n\n  renderWorld() {\n    this.scene.clearColor = new BABYLON.Color4(0.5, 0.8, 0.5, 0);\n    this.light = new Light(this.scene);\n    this.plane = new Plane(this.scene);\n  }\n\n  componentDidMount() {\n    this.engine = new BABYLON.Engine(this.canvas.current, true);\n    this.scene = new BABYLON.Scene(this.engine);\n    this.camera = new Camera(this.canvas.current, this.scene);\n    this.renderWorld();\n    this.engine.runRenderLoop(() => {\n      this.scene.render();\n    });\n    this.resize();\n    window.addEventListener(\"resize\", () => {\n      this.resize();\n    });\n  }\n\n  render() {\n    return __jsx(\"canvas\", {\n      id: \"canvas\",\n      ref: this.canvas,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    });\n  }\n\n}\n\nexport default World;","map":{"version":3,"sources":["/Users/RescueAMeza_SD/Desktop/mezaWebLab/Personal/alexmeza.me/components/World/World.js"],"names":["React","BABYLON","Config","Plane","Camera","Light","World","Component","constructor","props","canvas","createRef","resize","console","log","current","width","window","innerWidth","height","innerHeight","engine","renderWorld","scene","clearColor","Color4","light","plane","componentDidMount","Engine","Scene","camera","runRenderLoop","render","addEventListener"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,KAAKC,OAAZ,MAAyB,WAAzB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,KAAP,MAAkB,SAAlB;;AAEA,MAAMC,KAAN,SAAoBN,KAAK,CAACO,SAA1B,CAAoC;AAChCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKC,MAAL,GAAcV,KAAK,CAACW,SAAN,EAAd;AACH;;AAEDC,EAAAA,MAAM,GAAG;AACLC,IAAAA,OAAO,CAACC,GAAR,CAAY,IAAZ;AACA,SAAKJ,MAAL,CAAYK,OAAZ,CAAoBC,KAApB,GAA4BC,MAAM,CAACC,UAAnC;AACA,SAAKR,MAAL,CAAYK,OAAZ,CAAoBI,MAApB,GAA6BF,MAAM,CAACG,WAApC;AACA,SAAKC,MAAL,CAAYT,MAAZ;AACH;;AAEDU,EAAAA,WAAW,GAAG;AACV,SAAKC,KAAL,CAAWC,UAAX,GAAwB,IAAIvB,OAAO,CAACwB,MAAZ,CAAmB,GAAnB,EAAwB,GAAxB,EAA6B,GAA7B,EAAkC,CAAlC,CAAxB;AACA,SAAKC,KAAL,GAAa,IAAIrB,KAAJ,CAAU,KAAKkB,KAAf,CAAb;AACA,SAAKI,KAAL,GAAa,IAAIxB,KAAJ,CAAU,KAAKoB,KAAf,CAAb;AACH;;AAEDK,EAAAA,iBAAiB,GAAG;AAChB,SAAKP,MAAL,GAAc,IAAIpB,OAAO,CAAC4B,MAAZ,CAAmB,KAAKnB,MAAL,CAAYK,OAA/B,EAAwC,IAAxC,CAAd;AACA,SAAKQ,KAAL,GAAa,IAAItB,OAAO,CAAC6B,KAAZ,CAAkB,KAAKT,MAAvB,CAAb;AACA,SAAKU,MAAL,GAAc,IAAI3B,MAAJ,CAAW,KAAKM,MAAL,CAAYK,OAAvB,EAAgC,KAAKQ,KAArC,CAAd;AAEA,SAAKD,WAAL;AAEA,SAAKD,MAAL,CAAYW,aAAZ,CAA0B,MAAM;AAC5B,WAAKT,KAAL,CAAWU,MAAX;AACH,KAFD;AAIA,SAAKrB,MAAL;AAEAK,IAAAA,MAAM,CAACiB,gBAAP,CAAwB,QAAxB,EAAkC,MAAM;AACpC,WAAKtB,MAAL;AACH,KAFD;AAGH;;AAEDqB,EAAAA,MAAM,GAAG;AACL,WACI;AACI,MAAA,EAAE,EAAC,QADP;AAEI,MAAA,GAAG,EAAG,KAAKvB,MAFf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ;AAMH;;AA5C+B;;AA+CpC,eAAeJ,KAAf","sourcesContent":["import React from \"react\";\nimport * as BABYLON from 'babylonjs';\nimport Config from \"./Config\";\nimport Plane from \"./Plane\";\nimport Camera from \"./Camera\";\nimport Light from \"./Light\"\n\nclass World extends React.Component {\n    constructor(props) {\n        super(props);\n        this.canvas = React.createRef();\n    }\n\n    resize() {\n        console.log(this);\n        this.canvas.current.width = window.innerWidth;\n        this.canvas.current.height = window.innerHeight;\n        this.engine.resize();\n    }\n\n    renderWorld() {\n        this.scene.clearColor = new BABYLON.Color4(0.5, 0.8, 0.5, 0);\n        this.light = new Light(this.scene);\n        this.plane = new Plane(this.scene);\n    }\n\n    componentDidMount() {\n        this.engine = new BABYLON.Engine(this.canvas.current, true);\n        this.scene = new BABYLON.Scene(this.engine);\n        this.camera = new Camera(this.canvas.current, this.scene);\n\n        this.renderWorld();\n\n        this.engine.runRenderLoop(() => { \n            this.scene.render();\n        });\n\n        this.resize();\n\n        window.addEventListener(\"resize\", () => { \n            this.resize();\n        });\n    }\n\n    render() {\n        return (\n            <canvas \n                id=\"canvas\"\n                ref={ this.canvas }>\n            </canvas>\n        );\n    }\n}\n\nexport default World;"]},"metadata":{},"sourceType":"module"}