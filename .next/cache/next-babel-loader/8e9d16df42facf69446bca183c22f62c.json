{"ast":null,"code":"import _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\n// import * as BABYLON from \"babylonjs\";\nimport Config from \"./Config\";\nimport Utils from \"./Utils\";\n\nvar Camera =\n/*#__PURE__*/\nfunction () {\n  function Camera(canvas, scene) {\n    _classCallCheck(this, Camera);\n\n    this.scene = scene;\n    this.setCamera();\n    this.createTarget();\n    this.camera.setTarget(new BABYLON.Vector3(Config.camera.initialTarget.x, Config.camera.initialTarget.y, Config.camera.initialTarget.z));\n    this.camera.minZ = 0;\n\n    if (Config.debug.cameraControls) {\n      this.camera.attachControl(canvas, true);\n    }\n  }\n\n  _createClass(Camera, [{\n    key: \"setCamera\",\n    value: function setCamera() {\n      switch (Config.camera.type) {\n        case \"free\":\n          this.camera = new BABYLON.UniversalCamera(\"UniversalCamera\", new BABYLON.Vector3(Config.camera.initialPosition.x, Config.camera.initialPosition.y, Config.camera.initialPosition.z), this.scene);\n          break;\n\n        case \"arc\":\n          this.camera = new BABYLON.ArcRotateCamera(\"Camera\", 0, 0, 0, new BABYLON.Vector3(Config.camera.initialPosition.x, Config.camera.initialPosition.y, Config.camera.initialPosition.z), this.scene);\n          break;\n      }\n    }\n  }, {\n    key: \"createTarget\",\n    value: function createTarget() {\n      this.camera.targetSphere = new BABYLON.MeshBuilder.CreateSphere(\"target\", {\n        diameter: 0.5\n      });\n      this.camera.targetSphere.position = new BABYLON.Vector3(Config.camera.initialTarget.x, Config.camera.initialTarget.y, Config.camera.initialTarget.z);\n    }\n  }]);\n\n  return Camera;\n}();\n\nexport default Camera;","map":{"version":3,"sources":["/Users/RescueAMeza_SD/Desktop/mezaWebLab/Personal/alexmeza.me/components/World/Camera.js"],"names":["Config","Utils","Camera","canvas","scene","setCamera","createTarget","camera","setTarget","BABYLON","Vector3","initialTarget","x","y","z","minZ","debug","cameraControls","attachControl","type","UniversalCamera","initialPosition","ArcRotateCamera","targetSphere","MeshBuilder","CreateSphere","diameter","position"],"mappings":";;AAAA;AACA,OAAOA,MAAP,MAAmB,UAAnB;AACA,OAAOC,KAAP,MAAkB,SAAlB;;IAEMC,M;;;AACF,kBAAYC,MAAZ,EAAoBC,KAApB,EAA2B;AAAA;;AACvB,SAAKA,KAAL,GAAaA,KAAb;AACA,SAAKC,SAAL;AACA,SAAKC,YAAL;AACA,SAAKC,MAAL,CAAYC,SAAZ,CAAsB,IAAIC,OAAO,CAACC,OAAZ,CAAoBV,MAAM,CAACO,MAAP,CAAcI,aAAd,CAA4BC,CAAhD,EAAmDZ,MAAM,CAACO,MAAP,CAAcI,aAAd,CAA4BE,CAA/E,EAAkFb,MAAM,CAACO,MAAP,CAAcI,aAAd,CAA4BG,CAA9G,CAAtB;AACA,SAAKP,MAAL,CAAYQ,IAAZ,GAAmB,CAAnB;;AAEA,QAAIf,MAAM,CAACgB,KAAP,CAAaC,cAAjB,EAAiC;AAC7B,WAAKV,MAAL,CAAYW,aAAZ,CAA0Bf,MAA1B,EAAkC,IAAlC;AACH;AACJ;;;;gCAEW;AACR,cAAQH,MAAM,CAACO,MAAP,CAAcY,IAAtB;AACI,aAAK,MAAL;AACI,eAAKZ,MAAL,GAAc,IAAIE,OAAO,CAACW,eAAZ,CACV,iBADU,EAEV,IAAIX,OAAO,CAACC,OAAZ,CAAoBV,MAAM,CAACO,MAAP,CAAcc,eAAd,CAA8BT,CAAlD,EAAqDZ,MAAM,CAACO,MAAP,CAAcc,eAAd,CAA8BR,CAAnF,EAAsFb,MAAM,CAACO,MAAP,CAAcc,eAAd,CAA8BP,CAApH,CAFU,EAGV,KAAKV,KAHK,CAAd;AAKJ;;AACA,aAAK,KAAL;AACI,eAAKG,MAAL,GAAc,IAAIE,OAAO,CAACa,eAAZ,CACV,QADU,EAEV,CAFU,EAGV,CAHU,EAIV,CAJU,EAKV,IAAIb,OAAO,CAACC,OAAZ,CAAoBV,MAAM,CAACO,MAAP,CAAcc,eAAd,CAA8BT,CAAlD,EAAqDZ,MAAM,CAACO,MAAP,CAAcc,eAAd,CAA8BR,CAAnF,EAAsFb,MAAM,CAACO,MAAP,CAAcc,eAAd,CAA8BP,CAApH,CALU,EAMV,KAAKV,KANK,CAAd;AAQJ;AAjBJ;AAmBH;;;mCAEc;AACX,WAAKG,MAAL,CAAYgB,YAAZ,GAA2B,IAAId,OAAO,CAACe,WAAR,CAAoBC,YAAxB,CAAqC,QAArC,EAA+C;AACtEC,QAAAA,QAAQ,EAAE;AAD4D,OAA/C,CAA3B;AAIA,WAAKnB,MAAL,CAAYgB,YAAZ,CAAyBI,QAAzB,GAAoC,IAAIlB,OAAO,CAACC,OAAZ,CAAoBV,MAAM,CAACO,MAAP,CAAcI,aAAd,CAA4BC,CAAhD,EAAmDZ,MAAM,CAACO,MAAP,CAAcI,aAAd,CAA4BE,CAA/E,EAAkFb,MAAM,CAACO,MAAP,CAAcI,aAAd,CAA4BG,CAA9G,CAApC;AACH;;;;;;AAGL,eAAeZ,MAAf","sourcesContent":["// import * as BABYLON from \"babylonjs\";\nimport Config from \"./Config\";\nimport Utils from \"./Utils\";\n\nclass Camera {\n    constructor(canvas, scene) {\n        this.scene = scene;\n        this.setCamera();\n        this.createTarget();\n        this.camera.setTarget(new BABYLON.Vector3(Config.camera.initialTarget.x, Config.camera.initialTarget.y, Config.camera.initialTarget.z));\n        this.camera.minZ = 0;\n        \n        if (Config.debug.cameraControls) {\n            this.camera.attachControl(canvas, true);\n        }\n    }\n\n    setCamera() {\n        switch (Config.camera.type) {\n            case \"free\":\n                this.camera = new BABYLON.UniversalCamera(\n                    \"UniversalCamera\", \n                    new BABYLON.Vector3(Config.camera.initialPosition.x, Config.camera.initialPosition.y, Config.camera.initialPosition.z), \n                    this.scene\n                );\n            break;\n            case \"arc\":\n                this.camera = new BABYLON.ArcRotateCamera(\n                    \"Camera\", \n                    0, \n                    0, \n                    0, \n                    new BABYLON.Vector3(Config.camera.initialPosition.x, Config.camera.initialPosition.y, Config.camera.initialPosition.z), \n                    this.scene\n                );\n            break;\n        }\n    }\n\n    createTarget() {\n        this.camera.targetSphere = new BABYLON.MeshBuilder.CreateSphere(\"target\", {\n            diameter: 0.5\n        });\n\n        this.camera.targetSphere.position = new BABYLON.Vector3(Config.camera.initialTarget.x, Config.camera.initialTarget.y, Config.camera.initialTarget.z);\n    }\n}\n\nexport default Camera;"]},"metadata":{},"sourceType":"module"}