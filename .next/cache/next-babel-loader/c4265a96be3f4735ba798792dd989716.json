{"ast":null,"code":"import _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport Config from \"./Config\";\n\nvar Mountains =\n/*#__PURE__*/\nfunction () {\n  function Mountains(scene) {\n    _classCallCheck(this, Mountains);\n\n    this.scene = scene;\n    this.createMountains();\n    this.setMaterials();\n  }\n\n  _createClass(Mountains, [{\n    key: \"createMountains\",\n    value: function createMountains() {\n      var _this = this;\n\n      Config.mountains.forEach(function (mountain) {\n        mountain.mesh = new BABYLON.Mesh.CreateGroundFromHeightMap(\"ground-\".concat(Math.round(Math.random() * 100)), mountain.heightMap, mountain.width, mountain.height, mountain.subdivisions, 0, mountain.textureHeight, _this.scene, true);\n        mountain.mesh.rotate(BABYLON.Axis.Y, mountain.rotation, BABYLON.Space.WORLD);\n        mountain.mesh.position.x = mountain.x;\n        mountain.mesh.position.z = mountain.z;\n        mountain.mesh.position.y = mountain.y;\n      });\n    }\n  }, {\n    key: \"setMaterial\",\n    value: function setMaterial() {\n      var _this2 = this;\n\n      Config.mountains.forEach(function (mountain) {\n        var gridMaterial = new BABYLON.GridMaterial(\"gridMaterial-\".concat(Math.round(Math.random() * 100)), _this2.scene);\n        gridMaterial.mainColor = Config.mountains.grid.mainColor;\n        gridMaterial.lineColor = Config.mountains.grid.lineColor;\n        gridMaterial.gridRatio = Config.mountains.grid.gridRatio;\n        gridMaterial.backFaceCulling = false;\n        gridMaterial.majorUnitFrequency = Config.mountains.grid.majorUnitFrequency;\n        gridMaterial.opacity = Config.mountains.grid.opacity;\n        gridMaterial.emissiveColor = Config.mountains.grid.lineColor;\n        mountain.material = gridMaterial;\n      });\n    }\n  }]);\n\n  return Mountains;\n}();\n\nexport default Mountains;","map":{"version":3,"sources":["/Users/RescueAMeza_SD/Desktop/mezaWebLab/Personal/alexmeza.me/components/World/Mountains.js"],"names":["Config","Mountains","scene","createMountains","setMaterials","mountains","forEach","mountain","mesh","BABYLON","Mesh","CreateGroundFromHeightMap","Math","round","random","heightMap","width","height","subdivisions","textureHeight","rotate","Axis","Y","rotation","Space","WORLD","position","x","z","y","gridMaterial","GridMaterial","mainColor","grid","lineColor","gridRatio","backFaceCulling","majorUnitFrequency","opacity","emissiveColor","material"],"mappings":";;AAAA,OAAOA,MAAP,MAAmB,UAAnB;;IAEMC,S;;;AACF,qBAAYC,KAAZ,EAAmB;AAAA;;AACf,SAAKA,KAAL,GAAaA,KAAb;AACA,SAAKC,eAAL;AACA,SAAKC,YAAL;AACH;;;;sCAEiB;AAAA;;AACdJ,MAAAA,MAAM,CAACK,SAAP,CAAiBC,OAAjB,CAAyB,UAAAC,QAAQ,EAAI;AACjCA,QAAAA,QAAQ,CAACC,IAAT,GAAgB,IAAIC,OAAO,CAACC,IAAR,CAAaC,yBAAjB,kBACDC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,GAA3B,CADC,GAEZP,QAAQ,CAACQ,SAFG,EAGZR,QAAQ,CAACS,KAHG,EAIZT,QAAQ,CAACU,MAJG,EAKZV,QAAQ,CAACW,YALG,EAMZ,CANY,EAOZX,QAAQ,CAACY,aAPG,EAQZ,KAAI,CAACjB,KARO,EASZ,IATY,CAAhB;AAYAK,QAAAA,QAAQ,CAACC,IAAT,CAAcY,MAAd,CAAqBX,OAAO,CAACY,IAAR,CAAaC,CAAlC,EAAqCf,QAAQ,CAACgB,QAA9C,EAAwDd,OAAO,CAACe,KAAR,CAAcC,KAAtE;AACAlB,QAAAA,QAAQ,CAACC,IAAT,CAAckB,QAAd,CAAuBC,CAAvB,GAA2BpB,QAAQ,CAACoB,CAApC;AACApB,QAAAA,QAAQ,CAACC,IAAT,CAAckB,QAAd,CAAuBE,CAAvB,GAA2BrB,QAAQ,CAACqB,CAApC;AACArB,QAAAA,QAAQ,CAACC,IAAT,CAAckB,QAAd,CAAuBG,CAAvB,GAA2BtB,QAAQ,CAACsB,CAApC;AACH,OAjBD;AAkBH;;;kCAEa;AAAA;;AACV7B,MAAAA,MAAM,CAACK,SAAP,CAAiBC,OAAjB,CAAyB,UAAAC,QAAQ,EAAI;AACjC,YAAIuB,YAAY,GAAG,IAAIrB,OAAO,CAACsB,YAAZ,wBAA0CnB,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,GAA3B,CAA1C,GAA8E,MAAI,CAACZ,KAAnF,CAAnB;AAEA4B,QAAAA,YAAY,CAACE,SAAb,GAAyBhC,MAAM,CAACK,SAAP,CAAiB4B,IAAjB,CAAsBD,SAA/C;AACAF,QAAAA,YAAY,CAACI,SAAb,GAAyBlC,MAAM,CAACK,SAAP,CAAiB4B,IAAjB,CAAsBC,SAA/C;AACAJ,QAAAA,YAAY,CAACK,SAAb,GAAyBnC,MAAM,CAACK,SAAP,CAAiB4B,IAAjB,CAAsBE,SAA/C;AACAL,QAAAA,YAAY,CAACM,eAAb,GAA+B,KAA/B;AACAN,QAAAA,YAAY,CAACO,kBAAb,GAAkCrC,MAAM,CAACK,SAAP,CAAiB4B,IAAjB,CAAsBI,kBAAxD;AACAP,QAAAA,YAAY,CAACQ,OAAb,GAAuBtC,MAAM,CAACK,SAAP,CAAiB4B,IAAjB,CAAsBK,OAA7C;AACAR,QAAAA,YAAY,CAACS,aAAb,GAA6BvC,MAAM,CAACK,SAAP,CAAiB4B,IAAjB,CAAsBC,SAAnD;AACA3B,QAAAA,QAAQ,CAACiC,QAAT,GAAoBV,YAApB;AACH,OAXD;AAYH;;;;;;AAGL,eAAe7B,SAAf","sourcesContent":["import Config from \"./Config\";\n\nclass Mountains {\n    constructor(scene) {\n        this.scene = scene;\n        this.createMountains();\n        this.setMaterials();\n    }\n\n    createMountains() {\n        Config.mountains.forEach(mountain => {\n            mountain.mesh = new BABYLON.Mesh.CreateGroundFromHeightMap(\n                `ground-${ Math.round(Math.random() * 100) }`, \n                mountain.heightMap, \n                mountain.width, \n                mountain.height, \n                mountain.subdivisions, \n                0, \n                mountain.textureHeight, \n                this.scene, \n                true\n            );\n\n            mountain.mesh.rotate(BABYLON.Axis.Y, mountain.rotation, BABYLON.Space.WORLD);\n            mountain.mesh.position.x = mountain.x;\n            mountain.mesh.position.z = mountain.z;\n            mountain.mesh.position.y = mountain.y;\n        });\n    }\n\n    setMaterial() {\n        Config.mountains.forEach(mountain => {\n            let gridMaterial = new BABYLON.GridMaterial(`gridMaterial-${ Math.round(Math.random() * 100) }`, this.scene);\n\n            gridMaterial.mainColor = Config.mountains.grid.mainColor;\n            gridMaterial.lineColor = Config.mountains.grid.lineColor;\n            gridMaterial.gridRatio = Config.mountains.grid.gridRatio;\n            gridMaterial.backFaceCulling = false;\n            gridMaterial.majorUnitFrequency = Config.mountains.grid.majorUnitFrequency;\n            gridMaterial.opacity = Config.mountains.grid.opacity;\n            gridMaterial.emissiveColor = Config.mountains.grid.lineColor;\n            mountain.material = gridMaterial;\n        });\n    }\n}\n\nexport default Mountains;"]},"metadata":{},"sourceType":"module"}