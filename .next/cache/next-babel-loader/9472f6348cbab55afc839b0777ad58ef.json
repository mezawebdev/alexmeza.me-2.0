{"ast":null,"code":"import _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/RescueAMeza_SD/Desktop/mezaWebLab/Personal/alexmeza.me/components/World/World.js\";\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport * as BABYLON from 'babylonjs';\n\nvar World =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(World, _React$Component);\n\n  function World(props) {\n    var _this;\n\n    _classCallCheck(this, World);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(World).call(this, props));\n    _this.canvas = React.createRef();\n    return _this;\n  }\n\n  _createClass(World, [{\n    key: \"onWindowResize\",\n    value: function onWindowResize() {\n      this.engine.resize();\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      this.engine = new BABYLON.Engine(this.canvas.current, true);\n      this.scene = new BABYLON.Scene(this.engine);\n      this.camera = new BABYLON.ArcRotateCamera(\"Camera\", Math.PI / 2, Math.PI / 2, 2, new BABYLON.Vector3(0, 0, 5), this.scene);\n      this.light1 = new BABYLON.HemisphericLight(\"light1\", new BABYLON.Vector3(1, 1, 0), this.scene);\n      this.sphere = BABYLON.MeshBuilder.CreateSphere(\"sphere\", {\n        diameter: 2\n      }, this.scene);\n      this.camera.attachControl(this.canvas.current, true);\n      this.engine.runRenderLoop(function () {\n        _this2.scene.render();\n      });\n      window.addEventListener(\"resize\", function () {\n        _this2.onWindowResize();\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      // this.camera.attachControl(canvas, true);\n      // this.engine.runRenderLoop(() => { \n      //     console.log(this);\n      //     this.scene.render();\n      // });\n      // window.addEventListener(\"resize\", () => { \n      //     this.engine.resize();\n      // });\n      return __jsx(\"canvas\", {\n        id: \"canvas\",\n        ref: this.canvas,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      });\n    }\n  }]);\n\n  return World;\n}(React.Component);\n\nexport default World;","map":{"version":3,"sources":["/Users/RescueAMeza_SD/Desktop/mezaWebLab/Personal/alexmeza.me/components/World/World.js"],"names":["React","BABYLON","World","props","canvas","createRef","engine","resize","Engine","current","scene","Scene","camera","ArcRotateCamera","Math","PI","Vector3","light1","HemisphericLight","sphere","MeshBuilder","CreateSphere","diameter","attachControl","runRenderLoop","render","window","addEventListener","onWindowResize","Component"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,KAAKC,OAAZ,MAAyB,WAAzB;;IAEMC,K;;;;;AACF,iBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACf,+EAAMA,KAAN;AACA,UAAKC,MAAL,GAAcJ,KAAK,CAACK,SAAN,EAAd;AAFe;AAGlB;;;;qCAEgB;AACb,WAAKC,MAAL,CAAYC,MAAZ;AACH;;;wCAEmB;AAAA;;AAChB,WAAKD,MAAL,GAAc,IAAIL,OAAO,CAACO,MAAZ,CAAmB,KAAKJ,MAAL,CAAYK,OAA/B,EAAwC,IAAxC,CAAd;AACA,WAAKC,KAAL,GAAa,IAAIT,OAAO,CAACU,KAAZ,CAAkB,KAAKL,MAAvB,CAAb;AACA,WAAKM,MAAL,GAAc,IAAIX,OAAO,CAACY,eAAZ,CAA4B,QAA5B,EAAsCC,IAAI,CAACC,EAAL,GAAU,CAAhD,EAAmDD,IAAI,CAACC,EAAL,GAAU,CAA7D,EAAgE,CAAhE,EAAmE,IAAId,OAAO,CAACe,OAAZ,CAAoB,CAApB,EAAsB,CAAtB,EAAwB,CAAxB,CAAnE,EAA+F,KAAKN,KAApG,CAAd;AACA,WAAKO,MAAL,GAAc,IAAIhB,OAAO,CAACiB,gBAAZ,CAA6B,QAA7B,EAAuC,IAAIjB,OAAO,CAACe,OAAZ,CAAoB,CAApB,EAAuB,CAAvB,EAA0B,CAA1B,CAAvC,EAAqE,KAAKN,KAA1E,CAAd;AACA,WAAKS,MAAL,GAAclB,OAAO,CAACmB,WAAR,CAAoBC,YAApB,CAAiC,QAAjC,EAA2C;AAACC,QAAAA,QAAQ,EAAC;AAAV,OAA3C,EAAyD,KAAKZ,KAA9D,CAAd;AACA,WAAKE,MAAL,CAAYW,aAAZ,CAA0B,KAAKnB,MAAL,CAAYK,OAAtC,EAA+C,IAA/C;AAEA,WAAKH,MAAL,CAAYkB,aAAZ,CAA0B,YAAM;AAC5B,QAAA,MAAI,CAACd,KAAL,CAAWe,MAAX;AACH,OAFD;AAIAC,MAAAA,MAAM,CAACC,gBAAP,CAAwB,QAAxB,EAAkC,YAAM;AACpC,QAAA,MAAI,CAACC,cAAL;AACH,OAFD;AAGH;;;6BAEQ;AACL;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA,aACI;AACI,QAAA,EAAE,EAAC,QADP;AAEI,QAAA,GAAG,EAAG,KAAKxB,MAFf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ;AAMH;;;;EA7CeJ,KAAK,CAAC6B,S;;AAgD1B,eAAe3B,KAAf","sourcesContent":["import React from \"react\";\nimport * as BABYLON from 'babylonjs';\n\nclass World extends React.Component {\n    constructor(props) {\n        super(props);\n        this.canvas = React.createRef();\n    }\n\n    onWindowResize() {\n        this.engine.resize();\n    }\n\n    componentDidMount() {\n        this.engine = new BABYLON.Engine(this.canvas.current, true);\n        this.scene = new BABYLON.Scene(this.engine);\n        this.camera = new BABYLON.ArcRotateCamera(\"Camera\", Math.PI / 2, Math.PI / 2, 2, new BABYLON.Vector3(0,0,5), this.scene);\n        this.light1 = new BABYLON.HemisphericLight(\"light1\", new BABYLON.Vector3(1, 1, 0), this.scene);\n        this.sphere = BABYLON.MeshBuilder.CreateSphere(\"sphere\", {diameter:2}, this.scene);\n        this.camera.attachControl(this.canvas.current, true);\n\n        this.engine.runRenderLoop(() => { \n            this.scene.render();\n        });\n\n        window.addEventListener(\"resize\", () => { \n            this.onWindowResize();\n        });\n    }\n\n    render() {\n        // this.camera.attachControl(canvas, true);\n\n        // this.engine.runRenderLoop(() => { \n        //     console.log(this);\n        //     this.scene.render();\n        // });\n\n        // window.addEventListener(\"resize\", () => { \n        //     this.engine.resize();\n        // });\n\n        return (\n            <canvas \n                id=\"canvas\"\n                ref={ this.canvas }>\n            </canvas>\n        );\n    }\n}\n\nexport default World;"]},"metadata":{},"sourceType":"module"}