{"ast":null,"code":"import _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport Config from \"./Config\";\n\nvar DynamicGround =\n/*#__PURE__*/\nfunction () {\n  function DynamicGround(scene) {\n    _classCallCheck(this, DynamicGround);\n\n    this.scene = scene;\n    console.log(BABYLON);\n    var mapSubX = 500,\n        mapSubZ = 500,\n        mapData = new Float32Array(mapSubX * mapSubZ * 3);\n\n    for (var l = 0; l < mapSubZ; l++) {\n      for (var w = 0; w < mapSubX; w++) {\n        mapData[3 * (l * mapSubX + w)] = (w - mapSubX * 0.5) * 2.0;\n        mapData[3 * (l * mapSubX + w) + 1] = w / (l + 1) * Math.sin(l / 2) * Math.cos(w / 2) * 2.0;\n        mapData[3 * (l * mapSubX + w) + 2] = (l - mapSubZ * 0.5) * 2.0;\n      }\n    }\n\n    var params = {\n      mapData: mapData,\n      mapSubX: mapSubX,\n      mapSubZ: mapSubZ,\n      terrainSub: 200\n    };\n    this.ground = new BABYLON.DynamicTerrain(\"terrain\", params, this.scene);\n    this.ground.subToleranceX = 16;\n    this.ground.subToleranceZ = 16;\n    this.ground.LODLimits = [4, 3, 2, 1, 1];\n  }\n\n  _createClass(DynamicGround, [{\n    key: \"setMaterial\",\n    value: function setMaterial() {\n      this.gridMaterial = new BABYLON.GridMaterial(\"gridMaterial\", this.scene);\n      this.gridMaterial.mainColor = Config.ground.dynamic.grid.mainColor;\n      this.gridMaterial.lineColor = Config.ground.dynamic.grid.lineColor;\n      this.gridMaterial.gridRatio = Config.ground.dynamic.grid.gridRatio;\n      this.gridMaterial.backFaceCulling = false;\n      this.gridMaterial.majorUnitFrequency = Config.ground.dynamic.grid.majorUnitFrequency;\n      this.gridMaterial.opacity = Config.ground.dynamic.grid.opacity;\n      this.ground.mesh.material = this.gridMaterial;\n    }\n  }]);\n\n  return DynamicGround;\n}();\n\nexport default DynamicGround;","map":{"version":3,"sources":["/Users/RescueAMeza_SD/Desktop/mezaWebLab/Personal/alexmeza.me/components/World/DynamicGround.js"],"names":["Config","DynamicGround","scene","console","log","BABYLON","mapSubX","mapSubZ","mapData","Float32Array","l","w","Math","sin","cos","params","terrainSub","ground","DynamicTerrain","subToleranceX","subToleranceZ","LODLimits","gridMaterial","GridMaterial","mainColor","dynamic","grid","lineColor","gridRatio","backFaceCulling","majorUnitFrequency","opacity","mesh","material"],"mappings":";;AAAA,OAAOA,MAAP,MAAmB,UAAnB;;IAEMC,a;;;AACF,yBAAYC,KAAZ,EAAmB;AAAA;;AACf,SAAKA,KAAL,GAAaA,KAAb;AAEAC,IAAAA,OAAO,CAACC,GAAR,CAAYC,OAAZ;AAEA,QAAIC,OAAO,GAAG,GAAd;AAAA,QACIC,OAAO,GAAG,GADd;AAAA,QAEIC,OAAO,GAAG,IAAIC,YAAJ,CAAiBH,OAAO,GAAGC,OAAV,GAAoB,CAArC,CAFd;;AAIA,SAAK,IAAIG,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGH,OAApB,EAA6BG,CAAC,EAA9B,EAAkC;AAC9B,WAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGL,OAApB,EAA6BK,CAAC,EAA9B,EAAkC;AAC9BH,QAAAA,OAAO,CAAC,KAAIE,CAAC,GAAGJ,OAAJ,GAAcK,CAAlB,CAAD,CAAP,GAAgC,CAACA,CAAC,GAAGL,OAAO,GAAG,GAAf,IAAsB,GAAtD;AACAE,QAAAA,OAAO,CAAC,KAAKE,CAAC,GAAGJ,OAAJ,GAAcK,CAAnB,IAAwB,CAAzB,CAAP,GAAqCA,CAAC,IAAID,CAAC,GAAE,CAAP,CAAD,GAAaE,IAAI,CAACC,GAAL,CAASH,CAAC,GAAG,CAAb,CAAb,GAA+BE,IAAI,CAACE,GAAL,CAASH,CAAC,GAAG,CAAb,CAA/B,GAAiD,GAAtF;AACAH,QAAAA,OAAO,CAAC,KAAKE,CAAC,GAAGJ,OAAJ,GAAcK,CAAnB,IAAwB,CAAzB,CAAP,GAAqC,CAACD,CAAC,GAAGH,OAAO,GAAG,GAAf,IAAsB,GAA3D;AACJ;AACH;;AAED,QAAIQ,MAAM,GAAG;AACTP,MAAAA,OAAO,EAAEA,OADA;AAETF,MAAAA,OAAO,EAAEA,OAFA;AAGTC,MAAAA,OAAO,EAAEA,OAHA;AAITS,MAAAA,UAAU,EAAE;AAJH,KAAb;AAOA,SAAKC,MAAL,GAAc,IAAIZ,OAAO,CAACa,cAAZ,CAA2B,SAA3B,EAAsCH,MAAtC,EAA8C,KAAKb,KAAnD,CAAd;AACA,SAAKe,MAAL,CAAYE,aAAZ,GAA4B,EAA5B;AACA,SAAKF,MAAL,CAAYG,aAAZ,GAA4B,EAA5B;AACA,SAAKH,MAAL,CAAYI,SAAZ,GAAwB,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,EAAa,CAAb,CAAxB;AACH;;;;kCAEa;AACV,WAAKC,YAAL,GAAoB,IAAIjB,OAAO,CAACkB,YAAZ,CAAyB,cAAzB,EAAyC,KAAKrB,KAA9C,CAApB;AACA,WAAKoB,YAAL,CAAkBE,SAAlB,GAA8BxB,MAAM,CAACiB,MAAP,CAAcQ,OAAd,CAAsBC,IAAtB,CAA2BF,SAAzD;AACA,WAAKF,YAAL,CAAkBK,SAAlB,GAA8B3B,MAAM,CAACiB,MAAP,CAAcQ,OAAd,CAAsBC,IAAtB,CAA2BC,SAAzD;AACA,WAAKL,YAAL,CAAkBM,SAAlB,GAA8B5B,MAAM,CAACiB,MAAP,CAAcQ,OAAd,CAAsBC,IAAtB,CAA2BE,SAAzD;AACA,WAAKN,YAAL,CAAkBO,eAAlB,GAAoC,KAApC;AACA,WAAKP,YAAL,CAAkBQ,kBAAlB,GAAuC9B,MAAM,CAACiB,MAAP,CAAcQ,OAAd,CAAsBC,IAAtB,CAA2BI,kBAAlE;AACA,WAAKR,YAAL,CAAkBS,OAAlB,GAA4B/B,MAAM,CAACiB,MAAP,CAAcQ,OAAd,CAAsBC,IAAtB,CAA2BK,OAAvD;AACA,WAAKd,MAAL,CAAYe,IAAZ,CAAiBC,QAAjB,GAA4B,KAAKX,YAAjC;AACH;;;;;;AAGL,eAAerB,aAAf","sourcesContent":["import Config from \"./Config\";\n\nclass DynamicGround {\n    constructor(scene) {\n        this.scene = scene;\n\n        console.log(BABYLON);\n\n        let mapSubX = 500,\n            mapSubZ = 500,\n            mapData = new Float32Array(mapSubX * mapSubZ * 3);   \n\n        for (var l = 0; l < mapSubZ; l++) {           \n            for (var w = 0; w < mapSubX; w++) {                \n                mapData[3 *(l * mapSubX + w)] = (w - mapSubX * 0.5) * 2.0;\n                mapData[3 * (l * mapSubX + w) + 1] = w / (l +1) * Math.sin(l / 2) * Math.cos(w / 2) * 2.0;\n                mapData[3 * (l * mapSubX + w) + 2] = (l - mapSubZ * 0.5) * 2.0;\n           }            \n        }\n\n        var params = {\n            mapData: mapData,\n            mapSubX: mapSubX,\n            mapSubZ: mapSubZ,\n            terrainSub: 200\n        };\n\n        this.ground = new BABYLON.DynamicTerrain(\"terrain\", params, this.scene);\n        this.ground.subToleranceX = 16;\n        this.ground.subToleranceZ = 16;\n        this.ground.LODLimits = [4, 3, 2, 1, 1];\n    }\n\n    setMaterial() {\n        this.gridMaterial = new BABYLON.GridMaterial(\"gridMaterial\", this.scene);\n        this.gridMaterial.mainColor = Config.ground.dynamic.grid.mainColor;\n        this.gridMaterial.lineColor = Config.ground.dynamic.grid.lineColor;\n        this.gridMaterial.gridRatio = Config.ground.dynamic.grid.gridRatio;\n        this.gridMaterial.backFaceCulling = false;\n        this.gridMaterial.majorUnitFrequency = Config.ground.dynamic.grid.majorUnitFrequency;\n        this.gridMaterial.opacity = Config.ground.dynamic.grid.opacity;\n        this.ground.mesh.material = this.gridMaterial;\n    }\n}\n\nexport default DynamicGround;"]},"metadata":{},"sourceType":"module"}